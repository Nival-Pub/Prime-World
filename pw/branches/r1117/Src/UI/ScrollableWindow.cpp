#include "stdafx.h"
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "../Scripts/lua.hpp"
#include "ScrollableWindow.h"
#include "ScrollBar.h"
#include "ScrollArea.h"

namespace UI
{
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  BEGIN_LUA_TYPEINFO(ScrollableWindow, Window)
  END_LUA_TYPEINFO(ScrollableWindow)
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void ScrollableWindow::OnInitAfterChildrenCreated()
	{
		Window::OnInitAfterChildrenCreated();
		
		ForceUpdate();

		int count = GetChildrenCount();

		ScrollBar *pBar = 0;
		ScrollArea *pArea = 0;

		for(int i = 0; i < count; ++i)
		{
			if( !pBar )
				pBar = dynamic_cast<ScrollBar*>(GetChild(i));
			if( !pArea )
				pArea = dynamic_cast<ScrollArea*>(GetChild(i));

			if(pBar && pArea)
			{
				pBar->AttachScrollArea(pArea);
				break;
			}
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void ScrollableWindow::OnInit()
	{
		Window::OnInit();
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	REGISTER_CONTROLTYPE( NDb::UIScrollableWindowLayout, ScrollableWindow );
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
