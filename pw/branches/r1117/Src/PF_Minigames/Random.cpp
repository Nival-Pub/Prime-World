#include "stdafx.h"

#include "Random.h"

namespace PF_Minigames {

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
static RandomGenerator defaultRandom;
RandomGenerator& RandomGenerator::GetDefault()
{
	return defaultRandom;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const double RandomGenerator::fMaxInt = 4294967296.0;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int RandomGenerator::Random()
{
	randomSeed = randomSeed * 214013L + 2531011L;
	int res = randomSeed >> 7;
	randomSeed = randomSeed * 214013L + 2531011L;
	res ^= randomSeed << 6;

	return res;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void RandomGenerator::TrueRandomize()
{
	randomSeed = GetTickCount();
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
float RandomGenerator::RandomNormal( const float min, const float max )
{
	float sum = 0.f;

	for (int i = 0; i < 12; ++i)
	{
		sum += Random(0.f, 1.f);
	}

	sum /= 12.f;

	return min + sum * (max - min);
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int RandomGenerator::RollDices( int dices, int faces )
{
	ASSERT( dices >= 0 );
	ASSERT( faces >= 1 );

	int result = 0;

	for ( int i = 0; i < dices; ++i )
		result += Random( 1, faces );

	return result;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace PF_Minigames
