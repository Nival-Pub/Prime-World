/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace AccountLib
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class AccountShortInfo : TBase
  {
    private string _snid;
    private string _snuid;
    private string _login;
    private string _email;
    private string _nickname;

    public string Snid
    {
      get
      {
        return _snid;
      }
      set
      {
        __isset.snid = true;
        this._snid = value;
      }
    }

    public string Snuid
    {
      get
      {
        return _snuid;
      }
      set
      {
        __isset.snuid = true;
        this._snuid = value;
      }
    }

    public string Login
    {
      get
      {
        return _login;
      }
      set
      {
        __isset.login = true;
        this._login = value;
      }
    }

    public string Email
    {
      get
      {
        return _email;
      }
      set
      {
        __isset.email = true;
        this._email = value;
      }
    }

    public string Nickname
    {
      get
      {
        return _nickname;
      }
      set
      {
        __isset.nickname = true;
        this._nickname = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool snid;
      public bool snuid;
      public bool login;
      public bool email;
      public bool nickname;
    }

    public AccountShortInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              Snid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Snuid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Login = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Email = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              Nickname = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("AccountShortInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Snid != null && __isset.snid) {
        field.Name = "snid";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Snid);
        oprot.WriteFieldEnd();
      }
      if (Snuid != null && __isset.snuid) {
        field.Name = "snuid";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Snuid);
        oprot.WriteFieldEnd();
      }
      if (Login != null && __isset.login) {
        field.Name = "login";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Login);
        oprot.WriteFieldEnd();
      }
      if (Email != null && __isset.email) {
        field.Name = "email";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Email);
        oprot.WriteFieldEnd();
      }
      if (Nickname != null && __isset.nickname) {
        field.Name = "nickname";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Nickname);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("AccountShortInfo(");
      sb.Append("Snid: ");
      sb.Append(Snid);
      sb.Append(",Snuid: ");
      sb.Append(Snuid);
      sb.Append(",Login: ");
      sb.Append(Login);
      sb.Append(",Email: ");
      sb.Append(Email);
      sb.Append(",Nickname: ");
      sb.Append(Nickname);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
