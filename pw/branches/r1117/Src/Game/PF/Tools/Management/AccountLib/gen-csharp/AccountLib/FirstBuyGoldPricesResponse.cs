/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace AccountLib
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class FirstBuyGoldPricesResponse : TBase
  {
    private RequestResult _result;
    private List<FirstBuyGoldPriceEvent> _firstBuyEvents;
    private List<FirstBuyGoldPrice> _defaultPrices;

    /// <summary>
    /// 
    /// <seealso cref="RequestResult"/>
    /// </summary>
    public RequestResult Result
    {
      get
      {
        return _result;
      }
      set
      {
        __isset.result = true;
        this._result = value;
      }
    }

    public List<FirstBuyGoldPriceEvent> FirstBuyEvents
    {
      get
      {
        return _firstBuyEvents;
      }
      set
      {
        __isset.firstBuyEvents = true;
        this._firstBuyEvents = value;
      }
    }

    public List<FirstBuyGoldPrice> DefaultPrices
    {
      get
      {
        return _defaultPrices;
      }
      set
      {
        __isset.defaultPrices = true;
        this._defaultPrices = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool result;
      public bool firstBuyEvents;
      public bool defaultPrices;
    }

    public FirstBuyGoldPricesResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Result = (RequestResult)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                FirstBuyEvents = new List<FirstBuyGoldPriceEvent>();
                TList _list310 = iprot.ReadListBegin();
                for( int _i311 = 0; _i311 < _list310.Count; ++_i311)
                {
                  FirstBuyGoldPriceEvent _elem312 = new FirstBuyGoldPriceEvent();
                  _elem312 = new FirstBuyGoldPriceEvent();
                  _elem312.Read(iprot);
                  FirstBuyEvents.Add(_elem312);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.List) {
              {
                DefaultPrices = new List<FirstBuyGoldPrice>();
                TList _list313 = iprot.ReadListBegin();
                for( int _i314 = 0; _i314 < _list313.Count; ++_i314)
                {
                  FirstBuyGoldPrice _elem315 = new FirstBuyGoldPrice();
                  _elem315 = new FirstBuyGoldPrice();
                  _elem315.Read(iprot);
                  DefaultPrices.Add(_elem315);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("FirstBuyGoldPricesResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.result) {
        field.Name = "result";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Result);
        oprot.WriteFieldEnd();
      }
      if (FirstBuyEvents != null && __isset.firstBuyEvents) {
        field.Name = "firstBuyEvents";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, FirstBuyEvents.Count));
          foreach (FirstBuyGoldPriceEvent _iter316 in FirstBuyEvents)
          {
            _iter316.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (DefaultPrices != null && __isset.defaultPrices) {
        field.Name = "defaultPrices";
        field.Type = TType.List;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, DefaultPrices.Count));
          foreach (FirstBuyGoldPrice _iter317 in DefaultPrices)
          {
            _iter317.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("FirstBuyGoldPricesResponse(");
      sb.Append("Result: ");
      sb.Append(Result);
      sb.Append(",FirstBuyEvents: ");
      sb.Append(FirstBuyEvents);
      sb.Append(",DefaultPrices: ");
      sb.Append(DefaultPrices);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
