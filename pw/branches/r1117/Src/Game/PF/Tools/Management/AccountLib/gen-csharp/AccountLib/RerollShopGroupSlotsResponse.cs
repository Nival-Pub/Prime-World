/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace AccountLib
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class RerollShopGroupSlotsResponse : TBase
  {
    private RequestResult _result;
    private List<RerollShopGroupSlotsEvent> _slotEvents;
    private List<RerollShopGroupSlots> _defaultSlots;

    /// <summary>
    /// 
    /// <seealso cref="RequestResult"/>
    /// </summary>
    public RequestResult Result
    {
      get
      {
        return _result;
      }
      set
      {
        __isset.result = true;
        this._result = value;
      }
    }

    public List<RerollShopGroupSlotsEvent> SlotEvents
    {
      get
      {
        return _slotEvents;
      }
      set
      {
        __isset.slotEvents = true;
        this._slotEvents = value;
      }
    }

    public List<RerollShopGroupSlots> DefaultSlots
    {
      get
      {
        return _defaultSlots;
      }
      set
      {
        __isset.defaultSlots = true;
        this._defaultSlots = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool result;
      public bool slotEvents;
      public bool defaultSlots;
    }

    public RerollShopGroupSlotsResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Result = (RequestResult)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                SlotEvents = new List<RerollShopGroupSlotsEvent>();
                TList _list350 = iprot.ReadListBegin();
                for( int _i351 = 0; _i351 < _list350.Count; ++_i351)
                {
                  RerollShopGroupSlotsEvent _elem352 = new RerollShopGroupSlotsEvent();
                  _elem352 = new RerollShopGroupSlotsEvent();
                  _elem352.Read(iprot);
                  SlotEvents.Add(_elem352);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.List) {
              {
                DefaultSlots = new List<RerollShopGroupSlots>();
                TList _list353 = iprot.ReadListBegin();
                for( int _i354 = 0; _i354 < _list353.Count; ++_i354)
                {
                  RerollShopGroupSlots _elem355 = new RerollShopGroupSlots();
                  _elem355 = new RerollShopGroupSlots();
                  _elem355.Read(iprot);
                  DefaultSlots.Add(_elem355);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("RerollShopGroupSlotsResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.result) {
        field.Name = "result";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Result);
        oprot.WriteFieldEnd();
      }
      if (SlotEvents != null && __isset.slotEvents) {
        field.Name = "slotEvents";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, SlotEvents.Count));
          foreach (RerollShopGroupSlotsEvent _iter356 in SlotEvents)
          {
            _iter356.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (DefaultSlots != null && __isset.defaultSlots) {
        field.Name = "defaultSlots";
        field.Type = TType.List;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, DefaultSlots.Count));
          foreach (RerollShopGroupSlots _iter357 in DefaultSlots)
          {
            _iter357.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("RerollShopGroupSlotsResponse(");
      sb.Append("Result: ");
      sb.Append(Result);
      sb.Append(",SlotEvents: ");
      sb.Append(SlotEvents);
      sb.Append(",DefaultSlots: ");
      sb.Append(DefaultSlots);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
