; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Обновление для загрузчика Prime World"
#define MyAppVersion "0.1"
#define MyAppPublisher "Nival Inc."
#define MyAppURL "http://www.nival.com/"
#define MyAppExeName "PWLauncher.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E1525E9D-A5DF-4EC2-996E-9369B0A99729}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
CreateAppDir=no
OutputBaseFilename=PWPatch_1_qa
Compression=lzma
SolidCompression=yes
DisableWelcomePage=yes
CreateUninstallRegKey=no
PrivilegesRequired=lowest
;PrivilegesRequired=admin
Uninstallable=no
OutputDir=Output

[Languages]
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Files]
Source: "Source\PWLauncher.exe"; DestDir: "{code:LauncherPath}"; Flags: ignoreversion; BeforeInstall: clearDestination
Source: "Source\Launcher.version"; DestDir: "{code:LauncherPath}"; Flags: ignoreversion
Source: "Source\icudt.dll"; DestDir: "{code:LauncherPath}"; Flags: ignoreversion
Source: "Source\libcef.dll"; DestDir: "{code:LauncherPath}"; Flags: ignoreversion
Source: "Source\locales\*"; DestDir: "{code:LauncherPath}\locales"; Flags: ignoreversion
Source: "Source\chrome.pak"; DestDir: "{code:LauncherPath}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Run] 
; NOTE: The following entry contains an English phrase ("Launch"). You are free to translate it into another language if required. 
Filename: "{code:LauncherPath}\{#MyAppExeName}"; Description: "Запустить Prime World"; Flags: nowait postinstall skipifsilent 

[Code]
const UninstallRegPath = 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{B0A1F9C1-1F39-4D64-BE66-B79DAF43577B}';
const UninstallRegPath64 = 'Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{B0A1F9C1-1F39-4D64-BE66-B79DAF43577B}';

function LauncherPath(Param: String) : String;
Var LauncherInstallLocation: String;
begin

  if IsWin64 then
  begin
      if not RegQueryStringValue(HKEY_CURRENT_USER, UninstallRegPath64,'InstallLocation', LauncherInstallLocation) then
          RegQueryStringValue(HKEY_LOCAL_MACHINE, UninstallRegPath64,'InstallLocation', LauncherInstallLocation);
  end
  else
  begin

  if not RegQueryStringValue(HKEY_CURRENT_USER, UninstallRegPath,'InstallLocation', LauncherInstallLocation) then
    RegQueryStringValue(HKEY_LOCAL_MACHINE, UninstallRegPath,'InstallLocation', LauncherInstallLocation);

  end ;

  Result := LauncherInstallLocation;
end;

function CheckReg(): Boolean;
var RegKeyFound : Boolean;
begin

  RegKeyFound:= False;

  if IsWin64 then
  
  begin
  if RegKeyExists(HKEY_CURRENT_USER, UninstallRegPath64) OR RegKeyExists(HKEY_LOCAL_MACHINE, UninstallRegPath64) then
    RegKeyFound:= True;
  end
  
  else
  
  begin
    if RegKeyExists(HKEY_CURRENT_USER, UninstallRegPath) OR RegKeyExists(HKEY_LOCAL_MACHINE, UninstallRegPath) then
      RegKeyFound:= True;
  end ;

  Result := RegKeyFound;

end  ;

function InitializeSetup(): Boolean;
var ReadyToPatch : Boolean;
var launcherHWND : HWND;
var launcherDir : String;
var filePath : String;
var Path: String;

begin

  ReadyToPatch := CheckReg();

  if ReadyToPatch then
  begin
    launcherDir := LauncherPath('');
    ReadyToPatch := DirExists(launcherDir);
    filePath := ExtractFilePath(launcherDir);

    if Length(filePath) > 0 then
    begin
        ReadyToPatch := ReadyToPatch and ((CompareText(filePath, 'c:\windows') <> 0) and(CompareText(filePath, 'c:\windows\') <> 0) and (CompareText(filePath, 'c:\program files\') <> 0) and(CompareText(filePath, 'c:\program files') <> 0) and (CompareText(filePath, 'c:\program files(x86)\') <> 0) and (CompareText(filePath, 'c:\program files(x86)') <> 0));
    end;
  end;


      if not ReadyToPatch then
         //MsgBox('ReadyToPatch!!', mbInformation, MB_OK);
      MsgBox('Не удалось обнаружить установленный клиент игры на данном компьютере.', mbInformation, MB_OK);

   Result:= ReadyToPatch;

end;

procedure clearDestination();

var RegKeyFound : Boolean;
var FindRec: TFindRec;
var launcherDir : String;
var newPrefix : String;

begin
  RegKeyFound:=  CheckReg();
  newPrefix := 'renamedByPWPatch_';

  if RegKeyFound then
  begin

    launcherDir := AddBackslash(LauncherPath(''));

    RenameFile(launcherDir+'Cache', launcherDir + newPrefix + 'Cache');
    RenameFile(launcherDir+'PWLauncher.exe.update', launcherDir+ newPrefix +'PWLauncher.exe.update');
    RenameFile(launcherDir+'PWLauncher.exe', launcherDir + newPrefix + 'PWLauncher.exe');
    RenameFile(launcherDir+'Launcher.version', launcherDir + newPrefix + 'Launcher.version');
    RenameFile(launcherDir+'icudt.dll', launcherDir + newPrefix + 'icudt.dll');
    RenameFile(launcherDir+'libcef.dll', launcherDir + newPrefix + 'libcef.dll');
    RenameFile(launcherDir+'chrome.pak', launcherDir + newPrefix + 'chrome.pak');
    RenameFile(launcherDir+'locales', launcherDir + newPrefix + 'locales');


    if FindFirst(LauncherPath('') + 'PWLauncher*.bat', FindRec) then begin
    try
      repeat
        //MsgBox('File: ' +launcherDir + FindRec.Name, mbInformation, MB_OK);
        // Don't count directories
        if FindRec.Attributes and FILE_ATTRIBUTE_DIRECTORY = 0 then
        begin    
            //DeleteFile(launcherDir + FindRec.Name);
            RenameFile(launcherDir + FindRec.Name, launcherDir + newPrefix + FindRec.Name);
            //MsgBox('File: ' + launcherDir + FindRec.Name + ' => Deleted', mbInformation, MB_OK);
        end ;
      until not FindNext(FindRec);
    finally
      FindClose(FindRec);
    end;
  end;

      if FindFirst(LauncherPath('') + 'Launcher_*to*', FindRec) then begin
    try
      repeat
        //MsgBox('Folder: ' + launcherDir + FindRec.Name, mbInformation, MB_OK);
        //DelTree(launcherDir + FindRec.Name, True, True, True );
        RenameFile(launcherDir + FindRec.Name, launcherDir + newPrefix + FindRec.Name);
        //MsgBox('Folder: ' + launcherDir + FindRec.Name + ' => Deleted', mbInformation, MB_OK);
      until not FindNext(FindRec);
    finally
      FindClose(FindRec);
    end;
  end;

  end;
end;





