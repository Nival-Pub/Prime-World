#define HLSL
#include "../GlobalMasks.h"

struct VS_OUTPUT
{
  float4 Position : POSITION;
};

sampler shadowMap : register(s0);

float4 screenScaleOffset : register( PSHADER_LOCALCONST0 );
float4 params : register( PSHADER_LOCALCONST1 );

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
float4 PS_main(VS_OUTPUT Input, float4 PixelPos : VPOS ) : COLOR
{
  float2 uv = PixelPos.xy * screenScaleOffset.xy + screenScaleOffset.zw;

  float Sum = 0;

  for (int i = 0; i < 4; ++i)
  {
    Sum += tex2D(shadowMap, uv + i.xx * params.xy).r;
  }

  return float4( Sum, 0, 0, 1);
}
