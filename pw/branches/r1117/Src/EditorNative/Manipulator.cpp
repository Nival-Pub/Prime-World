#include "stdafx.h"
#include "EditorScene.h"
#include "Manipulator.h"

using namespace EditorNative;
using namespace EditorNative::Manipulators;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Manipulator::Manipulator( ManipulatorsController^ _controller )
:	controller( _controller ),
	location( Vector3::Zero ),
	rotation( Quaternion::Identity )
{
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Manipulator::Draw( NScene::ICamera& camera )
{
	for each ( ManipulatorElement^ element in GraphicElements )
	{
		element->PerformDrawing( camera );
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool Manipulator::TryCapture( const CVec2& cursorPosition, NScene::ICamera& camera )
{
	array<ManipulatorElement^>^ elements = GraphicElements;
	for each ( ManipulatorElement^ element in elements )
	{
		if ( element->TryCapture( cursorPosition, camera ) )
		{
			for each ( ManipulatorElement^ elementToUnselect in elements )
			{
				if ( !ReferenceEquals( elementToUnselect, element ) )
				{
					elementToUnselect->IsSelected = false;
				}
			}
			return true;
		}
	}
	Uncapture();
	return false;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Manipulator::Uncapture()
{
	for each ( ManipulatorElement^ element in GraphicElements )
	{
		element->IsCaptured = false;
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Manipulator::ResetSize()
{
  ManipulatorElement::ResetSize();
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Manipulator::IncreaseSize()
{
  ManipulatorElement::SizeCoeff -= SIZE_STEP;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Manipulator::DecreaseSize()
{
  ManipulatorElement::SizeCoeff += SIZE_STEP;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////