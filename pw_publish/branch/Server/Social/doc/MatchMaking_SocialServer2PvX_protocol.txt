Интерфейс общения социального сервера с PvX matchmaking (REST API)
======================================================================
started: Данила Воробьев, 03.03.2011

---------------------
1. Общий вид запросов
---------------------

Социальный сервер обращается к PvX MatchMaking-сервису с обычными HTTP-запросами (HTTP GET).
PVX MM должен уметь принимать HTTP GET на определенном IP:порту.
Для отладки можно использовать любой браузер.

В целом, запросы имеют вид:
http://<pvx_mm_server_address:port>/?action=mm?data={..json..}

Пример:
    http://localhost:8701/?action=mm&data={"ping":{"12345":0}}
    
Json-объект, передаваемый в параметре data, содержит некоторую иерархию запросов, разбитых по:
- командам (ping, add, cancel, accept), 
    - uid-ам пользователей, 
        - mmid-шкам матчмейкинг-сессий 
и т.п. 

PVX сервис отвечает на HTTP-запрос тоже в формате JSON; ответ тоже представляет собой некоторый иерархический JSON-объект.
Признаком валидности ответа является наличие ключа верхнего уровня {"response":{...}}, в котором уже содержится вся остальная инфа.

*) Для авторизации запросов можно, в принципе, использовать какой-нибудь механизм цифровой подписи, 
но скорее всего указанный IP:порт будет просто закрыт от доступа с левых IP чисто админскими методами.


------------------------------------
2. Формат запроса
------------------------------------

здесь 
uid:STRING -- уникальный id пользователя
mmid:STRING -- уникальный id mm-сессии

{
    "ver": STRING, // строка версии протокола соц.сервер/pvx в формате "hi.med.low"; matchmaking-серверу рекомендуется проверять совпадение hi и med версий.
    "add": { // в этой секции запросы на добавление новых сессий
        <uid>: {  
            <mmid>: { 
                "sess":STRING, // выбранный тип сессии: "pvx"|"pvp"|"train"
                "faction":INT, // выбранная сторона, 0=any
                "hero":INT,    // номер героя
                "rating":INT   // текущий рейтинг юзера
                // "reliability": <текущая надежность> и т.п.
            }
        },
        // таких запросов может быть сколько угодно, на каждого игрока отдельный ключ <uid>:{...}
    }
    "ping": { // в этой секции запросы состояния текущих сессий
        <uid>:0, // запрашиваем состояние всех сессий данного юзера
        <uid>:[ <mmid>, ... ] // список конкретных сессий, по которым запрашиваем состояние
        // таких запросов может быть сколько угодно, на каждого игрока отдельный ключ <uid>:{...}
    },
    "cancel": { // в этой секции запросы на отмену текущих сессий
        <uid>:0, // отменяем все сессии данного юзера
        <uid>:[ <mmid>, ... ], // отменяем конкретный список сессий
        // таких запросов может быть сколько угодно, на каждого игрока отдельный ключ <uid>:{...}
    },
    "accept": { // в этой секции запросы на подтверждение начала игры в завершенных (сматчмейканных) сессиях
        <uid>:[ <mmid>, ... ], // список конкретных сессий, по которым подтверждаем начало игры
        // таких запросов может быть сколько угодно, на каждого игрока отдельный ключ <uid>:{...}
    },
}
    
    
------------------------------------
3. Формат ответа
------------------------------------
"response": {
    "pvx": {
        "sessions": { // в этой секции ответы на команды add/ping (в обоих случаях отвечаем числом "прогресса" сессии
            <uid>: {
                <mmid>: progress, 
                // progress это число >=0:
                //    0=нет такой сессии, 
                //    1=только что добавлена, 
                //    2..99=матчмейкинг идет, 
                //    100=матчмейкинг завершен, 
                //    101=пользователь подтвердил участие
            },
        },
        "accept": { // в этой секции ответы на команды accept (успешность исполенния)
            <uid>: {
                <mmid>: 0/1,
            },
        },
        "cancel": { // в этой секции ответы на команды cancel (успешность исполенния)
            <uid>: {
                <mmid>: 0/1,
            },
        },
    },
    // прочие стандартные поля ответа ("ok", "server"...) см. в общем документе "/doc/MatchMaking_client_protocol.txt", пункт 2.
}

