#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:new_style
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from AccountManagementAPI import AccountManagement
from AccountManagementAPI.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  AccountInfoResponse GetAccountBySNUid(string snid, string snuid)'
  print '  AccountInfoResponse GetAccountByAuid(i64 auid)'
  print '  NickSnidResponse FindNicknameExact(string nickName)'
  print '  NickSnidListResponse FindNicknamesLike(string nickName, i32 page_offset, i32 page_size)'
  print '  SocialNetworksResponse GetSocialNetworks()'
  print '  LocaleInfoResponse GetLocaleInfoBySNUid(string snid, string snuid)'
  print '  LocaleInfoResponse GetLocaleInfoByAuid(i64 auid)'
  print '  NickSnidResponse FindPlayerByNickname(string nickname)'
  print '  NickSnidResponse FindPlayerByEmail(string email)'
  print '  NickSnidResponse PlayerChangeEmail(string email, string newEmail, string newPass)'
  print '  NickSnidResponse PlayerRemoveNickname(string email, string nickname)'
  print '  QuestsForTalentsInfoResponse GetAccountQuestsForTalentsByAuid(string login)'
  print '  RequestResult EditQuestForTalent(string login, QuestForTalentEdit questForTalentEdit, string gmLogin, string extra_comment)'
  print '  RequestResult EditAccount(string login, AccountEdit accountEdit, string gmLogin, string extra_comment)'
  print '  RequestResult EditAccountResources(string login, AccountEdit accountEdit, string gmLogin, string extra_comment)'
  print '  LibraryResponse GetAccountLibrary(string login)'
  print '  GameSessionShortInfo GetGameSession(i32 sessionid)'
  print '  BruteForceAccountShortInfo GetBruteForceAccount(string email)'
  print '  RequestResult UnBanBruteForceAccount(string email)'
  print '  BannedIpFullListInfo GetBannedIp(i32 limit, i32 skip)'
  print '  RequestResult UnBanIp(string ip)'
  print '  RequestResult EditFreeChanges(string login, string gmLogin, i32 nickChanges, i32 fractionChanges)'
  print '  RequestResult AddResources(i64 auid, string ResourceType, i32 amount)'
  print '  HeroesResponse GetAccountHeroes(string login)'
  print '  RequestResult UnlockHero(string login, i32 heroClassId, string gmLogin, string extra_comment)'
  print '  RequestResult EditHero(string login, HeroInfo heroEdit, string gmLogin)'
  print '  RequestResult LockHero(string login, i64 heroInstanceId, string gmLogin)'
  print '  RequestResult EditSeasonAwards(string login, SeasonAwards awardEdit, string gmLogin)'
  print '  RequestResult EditSeasonInfo(string login, i64 heroInstanceId, SeasonInfo seasonEdit, string gmLogin)'
  print '  TalentSetResponse GetHeroTalentSet(string login, i64 heroInstanceId)'
  print '  SeasonInfoResponse GetHeroSeasonsInfo(string login, i64 heroInstanceId)'
  print '  RequestResult AddTalent(string login, i32 talentClassId, string gmLogin, string extra_comment)'
  print '  RequestResult AddTalents(string login,  talentIds, string gmLogin, string extra_comment)'
  print '  RequestResult EditTalent(string login, TalentInfo talentEdit, string gmLogin)'
  print '  RequestResult DeleteTalent(string login, i64 talentInstanceId, string gmLogin)'
  print '  RequestResult MoveTalentFromTalentSetToLibrary(string login, i64 heroInstanceId, i64 talentInstanceId, string gmLogin)'
  print '  RequestResult MoveTalentFromLibraryToTalentSet(string login, i64 heroInstanceId, i64 talentInstanceId, i32 slot, string gmLogin)'
  print '  RequestResult RemoveTalentFromTalentSet(string login, i64 heroInstanceId, i64 talentInstanceId, i32 talentSetId, string gmLogin)'
  print '  SkinsResponse GetAccountSkins(i64 auid)'
  print '  RequestResult AddSkin(i64 auid, string skinPersistentId, string gmLogin, string extra_comment)'
  print '  RequestResult DeleteSkin(i64 auid, string skinPersistentId, string gmLogin, string extra_comment)'
  print '  TalentUpgradeEntitiesResponse GetAccountTalentUpgradeEntities(i64 auid)'
  print '  RequestResult DeleteTalentUpgradeEntity(i64 auid, i64 instanceId, string gmLogin, string extra_comment)'
  print '  BuildingsInfoResponse GetAccountBuildings(i64 auid)'
  print '  RequestResult MoveBuildingToStorage(i64 auid, i64 buildingInstanceId, string gmLogin)'
  print '  RequestResult AddBuilding(i64 auid, i32 buildingClassId, i32 level, string gmLogin, string extra_comment)'
  print '  RequestResult DeleteBuilding(i64 auid, i64 buildingInstanceId, string gmLogin)'
  print '  RequestResult GiveLamp(string login, LampInfo lampInfo, string gmLogin, string extra_comment)'
  print '  LampInfoResponse GetLampInfo(string login)'
  print '  RequestResult GiveUpgradeHeroTalents(string login, UpgradeHeroTalentsInfo lampInfo, string gmLogin, string extra_comment)'
  print '  UpgradeHeroTalentsInfoResponse GetUpgradeHeroTalentsInfo(string login)'
  print '  RequestResult DisjointSN(i64 auid, string snid)'
  print '  RequestResult ChangeFSN(i64 auid, string snid)'
  print '  RequestResult DeleteSAAccount(i64 auid)'
  print '  TournamentInfoResponse GetAccountTournamentInfo(string login)'
  print '  RequestResult EditTournamentInfo(string login, TournamentInfo tournamentInfo, string gmLogin)'
  print '  GiveTournamentTicketResponse GiveTournamentTicket(string login)'
  print '  TournamentGamesInfoResponse GetAccountTournamentGames(string login)'
  print '  GuildInfoResponse GetGuildById(i64 guildid)'
  print '  GuildInfoResponse GetGuildByName(string shortname, string fullname)'
  print '  GuildMemberInfoResponse GetGuildMemberById(i64 guildid, i64 auid)'
  print '  RequestResult EditGuild(GuildEditInfo info, string gmlogin)'
  print '  RequestResult ChangeGuildLeader(i64 guildid, i64 auid, string gmLogin)'
  print '  RequestResult RemoveGuildMembers(i64 guildid,  auids, string gmLogin)'
  print '  RequestResult ViewGuildMembers(i64 guildid)'
  print '  RequestResult EditGuildMember(i64 guildid, GuildMemberInfo member, string gmLogin)'
  print '  RequestResult SetGuildIcon(i64 guildid, string image)'
  print '  RequestResult SwitchToNewGuildIcon(i64 guildid, string gmLogin)'
  print '  ServerActionResponse TryToPayForGuildIconChange(i64 leaderauid, i32 changeiter)'
  print '  RequestResult AcquireGuildLock(i64 guildid, string gmlogin)'
  print '  RequestResult ReleaseGuildLock(i64 guildid, string gmlogin)'
  print '  RequestResult StopGuildSiege(i64 targetguildid, string gmlogin)'
  print '  RequestResult AddGuildSuzerain(i64 guildid, i64 suzerainguildid, string gmlogin)'
  print '  RequestResult RemoveGuildSuzerain(i64 guildid, string gmlogin)'
  print '  StringDataResponse GetFullGuildDump(i64 guildid, bool zip)'
  print '  GuildBankTalentsResponse GetFreeGuildBankTalents(i64 guildid)'
  print '  GuildBankTalentsResponse GetTakenGuildBankTalents(i64 guildid)'
  print '  RequestResult ReturnTalentToOwner(i64 guildid, i64 talentId, string gmLogin)'
  print '  RequestResult ReturnTalentToGuildBank(i64 guildid, i64 talentId, string gmLogin)'
  print '  RequestResult SendMessageToUser(string login, i64 auid, string messageTitle, string messageText, string gmLogin, string extra_comment)'
  print '  AdminMessagesResponse GetAccountAdminMessages(string login)'
  print '  RequestResult UserOperation(i64 auid, UserOperationType type, i32 minutes, string reason,  claims, string gmLogin,  claimAuids, i32 points)'
  print '  RequestResult ResetUserAccount(string login, string gmLogin)'
  print '  RequestResult DeleteUserAccount(string login, string gmLogin)'
  print '  RequestResult KickUser(string login, string gmLogin)'
  print '  StringDataResponse EditNickname(string login, string gmLogin, string nickname)'
  print '  ServerActionResponse PayEditNickname(string login, string nickname)'
  print '  ServerActionResponse PayChangeFraction(string login, i32 fraction)'
  print '  PriceServiceDataResponse GetPrices(string login, PayServiceType servicetype, string extra_comment)'
  print '  ServerActionResponse BuyService(string login, PayServiceType servicetype, i32 paramValue)'
  print '  RequestResult PayService(string login, PayServiceType servicetype, i32 paramValue, string gmLogin)'
  print '  RequestResult BuyTournamentTicket(string login, PayTicketType pttype)'
  print '  BroadcastCreateResponse CreateBroadcast(BroadcastInfo createInfo, string gmLogin)'
  print '  BroadcastLocalesResponse GetBroadcastLocales()'
  print '  RequestResult EditBroadcast(BroadcastInfo editInfo, string gmLogin)'
  print '  RequestResult DeleteBroadcast(i32 id, string gmLogin)'
  print '  BroadcastListResponse GetBroadcastList(i32 skipLines, i32 takeLines)'
  print '  RequestResult StartMessageRotation(i32 id, string gmLogin)'
  print '  RequestResult StopMessageRotation(i32 id, string gmLogin)'
  print '  SocServerVersionResponse GetSocServerVersion()'
  print '  StringDataResponse GetFullUserDump(string login, bool zip)'
  print '  RequestResult ApplyFullUserDump(string login, string dumpdata)'
  print '  RequestResult RemoveFakeAuid(string login)'
  print '  UserDumpsDataResponse GetBackups()'
  print '  StringDataResponse GetBrokenUserDump(string login, string date, bool zip)'
  print '  StringDataResponse GetBrokenUserDumpByNickname(string nickname, string date, bool zip)'
  print '  StringDataResponse CheckAccountValidity(string login)'
  print '  RequestResult FixAccount(string login, string gmLogin)'
  print '  RequestResult ActivateEmail(string email, string gmLogin)'
  print '  RequestResult FlushServerId(string login, string gmLogin)'
  print '  RequestResult AddUserRestriction(string snid, string snuid, string cbtAccessKey)'
  print '  RequestResult EditAccountDbValue(string login, string gmLogin, string key, string value)'
  print '  RegisterPaymentResponse RegisterPayment(i64 auid, i32 amount, string source, string txnid)'
  print '  GetPaymentBonusActionsResponse GetPaymentBonusActions(i64 auid)'
  print '  RequestResult ReplenishUserGold(i64 auid, i32 amount, string payment_system)'
  print '  RequestResult UpdateUserGold(i64 auid)'
  print '  QuestsInfoResponse GetQuests(i64 auid)'
  print '  ServerActionResponse ChangeQuest(i64 auid, i32 questid, QuestChangeAction action, string gmLogin)'
  print '  RequestResult UpdateGeoshowFlag(i64 auid, bool isAllowed)'
  print '  RequestResult ApplyDLC(i64 auid, string dlcid)'
  print '  DynamicQuestInfoResponse GetDynamicQuestInfo()'
  print '  DynamicQuestByIdResponse GetDynamicQuestById(i32 index)'
  print '  AddDynamicQuestResponse AddDynamicQuest(string questData, string locale, string gmLogin)'
  print '  RequestResult RemoveDynamicQuest(i32 index, string locale)'
  print '  RequestResult EditDynamicQuest(i32 index, string locale, string questData)'
  print '  DynamicQuestPullsInfoResponse GetDynamicQuestPullsInfo()'
  print '  DynamicQuestPullByIdResponse GetDynamicQuestPullById(i32 pullId)'
  print '  AuidsListResponse GetAuidsLists()'
  print '  AuidsListByIdResponse GetAuidsListById(i32 index)'
  print '  RequestResult AddAuidsList(AuidsList auidsList, string gmLogin)'
  print '  RequestResult EditAuidsList(AuidsList auidsList, string gmLogin)'
  print '  RequestResult RemoveAuidsList(i32 index)'
  print '  RequestResult AddDynamicQuestPull(DynamicQuestPull questPull, string gmLogin)'
  print '  RequestResult EditDynamicQuestPull(DynamicQuestPull questPull, string gmLogin)'
  print '  RequestResult RemoveDynamicQuestPull(i32 index, string locale, string gmLogin)'
  print '  RequestResult AddDynamicQuestsToPull(i32 pullId,  questIds, string locale, string gmLogin)'
  print '  RequestResult RemoveDynamicQuestsFromPull(i32 pullId,  questIds, string locale, string gmLogin)'
  print '  FlagResponse GetAccountFlags(string login)'
  print '  RequestResult UnlockFlag(string login, string flagPersistentId, string gmLogin, string extra_comment)'
  print '  RequestResult LockFlag(string login, string flagPersistentId, string gmLogin, string extra_comment)'
  print '  RequestResult BindToGeolocation(i64 auid, string country, string region, string city, string gmLogin)'
  print '  TalentsEventsResponse GetTalentsEvents()'
  print '  ResourceEventsResponse GetResourceEvents()'
  print '  RequestResult AddMassOperation(MassOperationInfo massOperation, string gmLogin)'
  print '  MassOperationsResultResponse GetMassOperationsInfo()'
  print '  RequestResult DeleteMassOperationInfo(i32 operaionId)'
  print '  CommonEventsListResponse GetAvailableEvents()'
  print '  RequestResult ChangeEventStateById(i32 persistentId, bool state)'
  print '  RequestResult DeleteEventById(i32 persistentId)'
  print '  TechsInfosResponse GetTechsInfos()'
  print '  TechsInfoByIdResponse GetTechsInfoById(i32 persistentId)'
  print '  RequestResult AddTechs(TechsInfo techInfo)'
  print '  RequestResult EditTechs(TechsInfo techInfo)'
  print '  CustomEventsResponse GetCustomEvents()'
  print '  CustomEventByIdResponse GetCustomEventById(i32 persistentId)'
  print '  RequestResult AddCustomEvent(CustomEvent customEvent)'
  print '  RequestResult EditCustomEvent(CustomEvent customEvent)'
  print '  CustomMapsResponse GetCustomMaps()'
  print '  CustomMapByIdResponse GetCustomMapById(i32 persistentId)'
  print '  RequestResult AddCustomMap(CustomMap customMap)'
  print '  RequestResult EditCustomMap(CustomMap customMap)'
  print '  TalentDropRaritiesResponse GetTalentDropRarities()'
  print '  TalentDropRarityByIdResponse GetTalentDropRarityById(i32 persistentId)'
  print '  RequestResult AddTalentDropRarities(TalentDropRarityEvent dropRarity)'
  print '  RequestResult EditTalentDropRarities(TalentDropRarityEvent dropRarity)'
  print '  NewsBannersResponse GetNewsBanners()'
  print '  NewsBannerByIdResponse GetNewsBannerById(i32 persistentId)'
  print '  RequestResult AddNewsBanner(NewsBanner banner)'
  print '  RequestResult EditNewsBanner(NewsBanner banner)'
  print '  SkinGoldPricesResponse GetSkinPrices()'
  print '  SkinGoldPriceByIdResponse GetSkinPriceById(i32 persistentId)'
  print '  RequestResult AddSkinPricesEvent(SkinGoldPriceEvent skinEvent)'
  print '  RequestResult EditSkinPricesEvent(SkinGoldPriceEvent skinEvent)'
  print '  HeroPricesResponse GetHeroPrices()'
  print '  HeroPriceByIdResponse GetHeroPriceById(i32 persistentId)'
  print '  RequestResult AddHeroPricesEvent(HeroPriceEvent skinEvent)'
  print '  RequestResult EditHeroPricesEvent(HeroPriceEvent skinEvent)'
  print '  TransmutationTalentsPerPerlResponse GetTransmutationTalentsPerPerl()'
  print '  TransmutationTalentsPerPerlByIdResponse GetTransmutationTalentsPerPerlById(i32 persistentId)'
  print '  RequestResult AddTalentPerPerlEvent(TransmutationTalentsPerPerl talentsPerPerlEvent)'
  print '  RequestResult EditTalentPerPerlEvent(TransmutationTalentsPerPerl talentsPerPerlEvent)'
  print '  RerollShopSlotsResponse GetRerollShopSlots()'
  print '  RerollShopSlotsByIdResponse GetRerollShopSlotsById(i32 persistentId)'
  print '  RequestResult AddRerollShopSlotsEvent(RerollShopSlots rerollShopSlotsEvent)'
  print '  RequestResult EditRerollShopSlotsEvent(RerollShopSlots rerollShopSlotsEvent)'
  print '  RerollShopPricesResponse GetRerollShopPrices()'
  print '  RerollShopPriceByIdResponse GetRerollShopPriceById(i32 persistentId)'
  print '  RequestResult AddRerollShopPriceEvent(RerollShopPrice rerollShopPriceEvent)'
  print '  RequestResult EditRerollShopPriceEvent(RerollShopPrice rerollShopPriceEvent)'
  print '  ReforgeTalentPriceResponse GetReforgeTalentPrice()'
  print '  ReforgeTalentPriceByIdResponse GetReforgeTalentPriceById(i32 persistentId)'
  print '  RequestResult AddReforgeTalentPriceEvent(ReforgeTalentPrices reforgeTalentPriceEvent)'
  print '  RequestResult EditReforgeTalentPriceEvent(ReforgeTalentPrices reforgeTalentPriceEvent)'
  print '  RerollShopGroupPricesResponse GetRerollShopGroupPrices()'
  print '  RerollShopGroupPriceByIdResponse GetRerollShopGroupPriceById(i32 persistentId)'
  print '  RequestResult AddRerollShopGroupPricesEvent(RerollShopGroupPriceEvent groupEvent)'
  print '  RequestResult EditRerollShopGroupPricesEvent(RerollShopGroupPriceEvent groupEvent)'
  print '  RerollShopGroupCurrenciesResponse GetRerollShopGroupCurrencies()'
  print '  RerollShopGroupCurrenciesByIdResponse GetRerollShopGroupCurrenciesById(i32 persistentId)'
  print '  RequestResult AddRerollShopGroupCurrenciesEvent(RerollShopGroupCurrenciesEvent groupEvent)'
  print '  RequestResult EditRerollShopGroupCurrenciesEvent(RerollShopGroupCurrenciesEvent groupEvent)'
  print '  RerollShopSlotPricesResponse GetRerollShopSlotPrices()'
  print '  RerollShopSlotPriceByIdResponse GetRerollShopSlotPriceById(i32 persistentId)'
  print '  RequestResult AddRerollShopSlotPricesEvent(RerollShopSlotPriceEvent groupEvent)'
  print '  RequestResult EditRerollShopSlotPricesEvent(RerollShopSlotPriceEvent groupEvent)'
  print '  RerollShopGroupProbabilitiesResponse GetRerollShopGroupProbabilities()'
  print '  RerollShopGroupProbabilityByIdResponse GetRerollShopGroupProbabilityById(i32 persistentId)'
  print '  RequestResult AddRerollShopGroupProbabilityEvent(RerollShopGroupProbabilityEvent groupEvent)'
  print '  RequestResult EditRerollShopGroupProbabilityEvent(RerollShopGroupProbabilityEvent groupEvent)'
  print '  RerollShopSlotAmountsResponse GetRerollShopSlotAmount()'
  print '  RerollShopSlotAmountByIdResponse GetRerollShopSlotAmountById(i32 persistentId)'
  print '  RequestResult AddRerollShopSlotAmountsEvent(RerollShopSlotAmountEvent groupEvent)'
  print '  RequestResult EditRerollShopSlotAmountsEvent(RerollShopSlotAmountEvent groupEvent)'
  print '  FirstBuyGoldPricesResponse GetFirstBuyPrices()'
  print '  FirstBuyGoldPriceByIdResponse GetFirstBuyPriceById(i32 persistentId)'
  print '  RequestResult AddFirstBuyPricesEvent(FirstBuyGoldPriceEvent firstBuyEvent)'
  print '  RequestResult EditFirstBuyPricesEvent(FirstBuyGoldPriceEvent firstBuyEvent)'
  print '  RerollShopPremiumNotInactiveResponse GetRerollShopPremiumNotInactive()'
  print '  RerollShopPremiumNotInactiveByIdResponse GetRerollShopPremiumNotInactiveById(i32 persistentId)'
  print '  RequestResult AddRerollShopPremiumNotInactiveEvent(RerollShopPremiumNotInactiveEvent rerollShopPremiumNotInactiveEvent)'
  print '  RequestResult EditRerollShopPremiumNotInactiveEvent(RerollShopPremiumNotInactiveEvent rerollShopPremiumNotInactiveEvent)'
  print '  RerollShopGroupSlotsResponse GetRerollShopGroupSlots()'
  print '  RerollShopGroupSlotsByIdResponse GetRerollShopGroupSlotsById(i32 persistentId)'
  print '  RequestResult AddRerollShopGroupSlotsEvent(RerollShopGroupSlotsEvent groupEvent)'
  print '  RequestResult EditRerollShopGroupSlotsEvent(RerollShopGroupSlotsEvent groupEvent)'
  print '  RerollShopBannersResponse GetRerollShopBanners()'
  print '  RerollShopBannerByIdResponse GetRerollShopBannerById(i32 persistentId)'
  print '  RequestResult AddRerollShopBanner(RerollShopBanner banner)'
  print '  RequestResult EditRerollShopBanner(RerollShopBanner banner)'
  print '  RerollShopTooltipsResponse GetRerollShopTooltips()'
  print '  RerollShopTooltipByIdResponse GetRerollShopTooltipById(i32 persistentId)'
  print '  RequestResult AddRerollShopTooltip(RerollShopTooltip tooltip)'
  print '  RequestResult EditRerollShopTooltip(RerollShopTooltip tooltip)'
  print '  RollEventsResponse GetRollEvents()'
  print '  RollEventByIdResponse GetRollEventById(i32 persistentId)'
  print '  RequestResult AddRollEvent(RollEvent rollEvent)'
  print '  RequestResult EditRollEvent(RollEvent rollEvent)'
  print '  QuestEventsResponse GetQuestEvents()'
  print '  QuestEventByIdResponse GetQuestEventById(i32 persistentId)'
  print '  RequestResult AddQuestEvent(QuestEvent questEvent)'
  print '  RequestResult EditQuestEvent(QuestEvent questEvent)'
  print '  TradeEventsResponse GetTradeEvents()'
  print '  TradeEventByIdResponse GetTradeEventById(i32 persistentId)'
  print '  RequestResult AddTradeEvent(TradeEventModel tradeEvent)'
  print '  RequestResult EditTradeEvent(TradeEventModel tradeEvent)'
  print '  SeasonEventsResponse GetSeasonEvents()'
  print '  SeasonEventByIdResponse GetSeasonEventById(i32 persistentId)'
  print '  RequestResult AddSeasonEvent(SeasonEvent seasonEvent)'
  print '  RequestResult EditSeasonEvent(SeasonEvent seasonEvent)'
  print '  DonateEventsResponse GetDonateEvents()'
  print '  DonateEventByIdResponse GetDonateEventById(i32 persistentId)'
  print '  RequestResult AddDonateEvent(DonateEvent donateEvent)'
  print '  RequestResult EditDonateEvent(DonateEvent donateEvent)'
  print '  GWEventsModelResponse GetGWEvents()'
  print '  GWEventsModelByIdResponse GetGWEventsModelById(i32 persistentId)'
  print '  RequestResult EditGWEvent(GWEventModel gwEventModel, string gmLogin)'
  print '  FriendInfoResponse GetAccountFriends(i64 auid)'
  print '  RequestResult RemoveFriend(i64 auid, i64 friendAuid)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = AccountManagement.Client(protocol)
transport.open()

if cmd == 'GetAccountBySNUid':
  if len(args) != 2:
    print 'GetAccountBySNUid requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetAccountBySNUid(args[0],args[1],))

elif cmd == 'GetAccountByAuid':
  if len(args) != 1:
    print 'GetAccountByAuid requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountByAuid(eval(args[0]),))

elif cmd == 'FindNicknameExact':
  if len(args) != 1:
    print 'FindNicknameExact requires 1 args'
    sys.exit(1)
  pp.pprint(client.FindNicknameExact(args[0],))

elif cmd == 'FindNicknamesLike':
  if len(args) != 3:
    print 'FindNicknamesLike requires 3 args'
    sys.exit(1)
  pp.pprint(client.FindNicknamesLike(args[0],eval(args[1]),eval(args[2]),))

elif cmd == 'GetSocialNetworks':
  if len(args) != 0:
    print 'GetSocialNetworks requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetSocialNetworks())

elif cmd == 'GetLocaleInfoBySNUid':
  if len(args) != 2:
    print 'GetLocaleInfoBySNUid requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetLocaleInfoBySNUid(args[0],args[1],))

elif cmd == 'GetLocaleInfoByAuid':
  if len(args) != 1:
    print 'GetLocaleInfoByAuid requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetLocaleInfoByAuid(eval(args[0]),))

elif cmd == 'FindPlayerByNickname':
  if len(args) != 1:
    print 'FindPlayerByNickname requires 1 args'
    sys.exit(1)
  pp.pprint(client.FindPlayerByNickname(args[0],))

elif cmd == 'FindPlayerByEmail':
  if len(args) != 1:
    print 'FindPlayerByEmail requires 1 args'
    sys.exit(1)
  pp.pprint(client.FindPlayerByEmail(args[0],))

elif cmd == 'PlayerChangeEmail':
  if len(args) != 3:
    print 'PlayerChangeEmail requires 3 args'
    sys.exit(1)
  pp.pprint(client.PlayerChangeEmail(args[0],args[1],args[2],))

elif cmd == 'PlayerRemoveNickname':
  if len(args) != 2:
    print 'PlayerRemoveNickname requires 2 args'
    sys.exit(1)
  pp.pprint(client.PlayerRemoveNickname(args[0],args[1],))

elif cmd == 'GetAccountQuestsForTalentsByAuid':
  if len(args) != 1:
    print 'GetAccountQuestsForTalentsByAuid requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountQuestsForTalentsByAuid(args[0],))

elif cmd == 'EditQuestForTalent':
  if len(args) != 4:
    print 'EditQuestForTalent requires 4 args'
    sys.exit(1)
  pp.pprint(client.EditQuestForTalent(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'EditAccount':
  if len(args) != 4:
    print 'EditAccount requires 4 args'
    sys.exit(1)
  pp.pprint(client.EditAccount(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'EditAccountResources':
  if len(args) != 4:
    print 'EditAccountResources requires 4 args'
    sys.exit(1)
  pp.pprint(client.EditAccountResources(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'GetAccountLibrary':
  if len(args) != 1:
    print 'GetAccountLibrary requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountLibrary(args[0],))

elif cmd == 'GetGameSession':
  if len(args) != 1:
    print 'GetGameSession requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetGameSession(eval(args[0]),))

elif cmd == 'GetBruteForceAccount':
  if len(args) != 1:
    print 'GetBruteForceAccount requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetBruteForceAccount(args[0],))

elif cmd == 'UnBanBruteForceAccount':
  if len(args) != 1:
    print 'UnBanBruteForceAccount requires 1 args'
    sys.exit(1)
  pp.pprint(client.UnBanBruteForceAccount(args[0],))

elif cmd == 'GetBannedIp':
  if len(args) != 2:
    print 'GetBannedIp requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetBannedIp(eval(args[0]),eval(args[1]),))

elif cmd == 'UnBanIp':
  if len(args) != 1:
    print 'UnBanIp requires 1 args'
    sys.exit(1)
  pp.pprint(client.UnBanIp(args[0],))

elif cmd == 'EditFreeChanges':
  if len(args) != 4:
    print 'EditFreeChanges requires 4 args'
    sys.exit(1)
  pp.pprint(client.EditFreeChanges(args[0],args[1],eval(args[2]),eval(args[3]),))

elif cmd == 'AddResources':
  if len(args) != 3:
    print 'AddResources requires 3 args'
    sys.exit(1)
  pp.pprint(client.AddResources(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'GetAccountHeroes':
  if len(args) != 1:
    print 'GetAccountHeroes requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountHeroes(args[0],))

elif cmd == 'UnlockHero':
  if len(args) != 4:
    print 'UnlockHero requires 4 args'
    sys.exit(1)
  pp.pprint(client.UnlockHero(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'EditHero':
  if len(args) != 3:
    print 'EditHero requires 3 args'
    sys.exit(1)
  pp.pprint(client.EditHero(args[0],eval(args[1]),args[2],))

elif cmd == 'LockHero':
  if len(args) != 3:
    print 'LockHero requires 3 args'
    sys.exit(1)
  pp.pprint(client.LockHero(args[0],eval(args[1]),args[2],))

elif cmd == 'EditSeasonAwards':
  if len(args) != 3:
    print 'EditSeasonAwards requires 3 args'
    sys.exit(1)
  pp.pprint(client.EditSeasonAwards(args[0],eval(args[1]),args[2],))

elif cmd == 'EditSeasonInfo':
  if len(args) != 4:
    print 'EditSeasonInfo requires 4 args'
    sys.exit(1)
  pp.pprint(client.EditSeasonInfo(args[0],eval(args[1]),eval(args[2]),args[3],))

elif cmd == 'GetHeroTalentSet':
  if len(args) != 2:
    print 'GetHeroTalentSet requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetHeroTalentSet(args[0],eval(args[1]),))

elif cmd == 'GetHeroSeasonsInfo':
  if len(args) != 2:
    print 'GetHeroSeasonsInfo requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetHeroSeasonsInfo(args[0],eval(args[1]),))

elif cmd == 'AddTalent':
  if len(args) != 4:
    print 'AddTalent requires 4 args'
    sys.exit(1)
  pp.pprint(client.AddTalent(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'AddTalents':
  if len(args) != 4:
    print 'AddTalents requires 4 args'
    sys.exit(1)
  pp.pprint(client.AddTalents(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'EditTalent':
  if len(args) != 3:
    print 'EditTalent requires 3 args'
    sys.exit(1)
  pp.pprint(client.EditTalent(args[0],eval(args[1]),args[2],))

elif cmd == 'DeleteTalent':
  if len(args) != 3:
    print 'DeleteTalent requires 3 args'
    sys.exit(1)
  pp.pprint(client.DeleteTalent(args[0],eval(args[1]),args[2],))

elif cmd == 'MoveTalentFromTalentSetToLibrary':
  if len(args) != 4:
    print 'MoveTalentFromTalentSetToLibrary requires 4 args'
    sys.exit(1)
  pp.pprint(client.MoveTalentFromTalentSetToLibrary(args[0],eval(args[1]),eval(args[2]),args[3],))

elif cmd == 'MoveTalentFromLibraryToTalentSet':
  if len(args) != 5:
    print 'MoveTalentFromLibraryToTalentSet requires 5 args'
    sys.exit(1)
  pp.pprint(client.MoveTalentFromLibraryToTalentSet(args[0],eval(args[1]),eval(args[2]),eval(args[3]),args[4],))

elif cmd == 'RemoveTalentFromTalentSet':
  if len(args) != 5:
    print 'RemoveTalentFromTalentSet requires 5 args'
    sys.exit(1)
  pp.pprint(client.RemoveTalentFromTalentSet(args[0],eval(args[1]),eval(args[2]),eval(args[3]),args[4],))

elif cmd == 'GetAccountSkins':
  if len(args) != 1:
    print 'GetAccountSkins requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountSkins(eval(args[0]),))

elif cmd == 'AddSkin':
  if len(args) != 4:
    print 'AddSkin requires 4 args'
    sys.exit(1)
  pp.pprint(client.AddSkin(eval(args[0]),args[1],args[2],args[3],))

elif cmd == 'DeleteSkin':
  if len(args) != 4:
    print 'DeleteSkin requires 4 args'
    sys.exit(1)
  pp.pprint(client.DeleteSkin(eval(args[0]),args[1],args[2],args[3],))

elif cmd == 'GetAccountTalentUpgradeEntities':
  if len(args) != 1:
    print 'GetAccountTalentUpgradeEntities requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountTalentUpgradeEntities(eval(args[0]),))

elif cmd == 'DeleteTalentUpgradeEntity':
  if len(args) != 4:
    print 'DeleteTalentUpgradeEntity requires 4 args'
    sys.exit(1)
  pp.pprint(client.DeleteTalentUpgradeEntity(eval(args[0]),eval(args[1]),args[2],args[3],))

elif cmd == 'GetAccountBuildings':
  if len(args) != 1:
    print 'GetAccountBuildings requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountBuildings(eval(args[0]),))

elif cmd == 'MoveBuildingToStorage':
  if len(args) != 3:
    print 'MoveBuildingToStorage requires 3 args'
    sys.exit(1)
  pp.pprint(client.MoveBuildingToStorage(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'AddBuilding':
  if len(args) != 5:
    print 'AddBuilding requires 5 args'
    sys.exit(1)
  pp.pprint(client.AddBuilding(eval(args[0]),eval(args[1]),eval(args[2]),args[3],args[4],))

elif cmd == 'DeleteBuilding':
  if len(args) != 3:
    print 'DeleteBuilding requires 3 args'
    sys.exit(1)
  pp.pprint(client.DeleteBuilding(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'GiveLamp':
  if len(args) != 4:
    print 'GiveLamp requires 4 args'
    sys.exit(1)
  pp.pprint(client.GiveLamp(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'GetLampInfo':
  if len(args) != 1:
    print 'GetLampInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetLampInfo(args[0],))

elif cmd == 'GiveUpgradeHeroTalents':
  if len(args) != 4:
    print 'GiveUpgradeHeroTalents requires 4 args'
    sys.exit(1)
  pp.pprint(client.GiveUpgradeHeroTalents(args[0],eval(args[1]),args[2],args[3],))

elif cmd == 'GetUpgradeHeroTalentsInfo':
  if len(args) != 1:
    print 'GetUpgradeHeroTalentsInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetUpgradeHeroTalentsInfo(args[0],))

elif cmd == 'DisjointSN':
  if len(args) != 2:
    print 'DisjointSN requires 2 args'
    sys.exit(1)
  pp.pprint(client.DisjointSN(eval(args[0]),args[1],))

elif cmd == 'ChangeFSN':
  if len(args) != 2:
    print 'ChangeFSN requires 2 args'
    sys.exit(1)
  pp.pprint(client.ChangeFSN(eval(args[0]),args[1],))

elif cmd == 'DeleteSAAccount':
  if len(args) != 1:
    print 'DeleteSAAccount requires 1 args'
    sys.exit(1)
  pp.pprint(client.DeleteSAAccount(eval(args[0]),))

elif cmd == 'GetAccountTournamentInfo':
  if len(args) != 1:
    print 'GetAccountTournamentInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountTournamentInfo(args[0],))

elif cmd == 'EditTournamentInfo':
  if len(args) != 3:
    print 'EditTournamentInfo requires 3 args'
    sys.exit(1)
  pp.pprint(client.EditTournamentInfo(args[0],eval(args[1]),args[2],))

elif cmd == 'GiveTournamentTicket':
  if len(args) != 1:
    print 'GiveTournamentTicket requires 1 args'
    sys.exit(1)
  pp.pprint(client.GiveTournamentTicket(args[0],))

elif cmd == 'GetAccountTournamentGames':
  if len(args) != 1:
    print 'GetAccountTournamentGames requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountTournamentGames(args[0],))

elif cmd == 'GetGuildById':
  if len(args) != 1:
    print 'GetGuildById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetGuildById(eval(args[0]),))

elif cmd == 'GetGuildByName':
  if len(args) != 2:
    print 'GetGuildByName requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetGuildByName(args[0],args[1],))

elif cmd == 'GetGuildMemberById':
  if len(args) != 2:
    print 'GetGuildMemberById requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetGuildMemberById(eval(args[0]),eval(args[1]),))

elif cmd == 'EditGuild':
  if len(args) != 2:
    print 'EditGuild requires 2 args'
    sys.exit(1)
  pp.pprint(client.EditGuild(eval(args[0]),args[1],))

elif cmd == 'ChangeGuildLeader':
  if len(args) != 3:
    print 'ChangeGuildLeader requires 3 args'
    sys.exit(1)
  pp.pprint(client.ChangeGuildLeader(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'RemoveGuildMembers':
  if len(args) != 3:
    print 'RemoveGuildMembers requires 3 args'
    sys.exit(1)
  pp.pprint(client.RemoveGuildMembers(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'ViewGuildMembers':
  if len(args) != 1:
    print 'ViewGuildMembers requires 1 args'
    sys.exit(1)
  pp.pprint(client.ViewGuildMembers(eval(args[0]),))

elif cmd == 'EditGuildMember':
  if len(args) != 3:
    print 'EditGuildMember requires 3 args'
    sys.exit(1)
  pp.pprint(client.EditGuildMember(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'SetGuildIcon':
  if len(args) != 2:
    print 'SetGuildIcon requires 2 args'
    sys.exit(1)
  pp.pprint(client.SetGuildIcon(eval(args[0]),args[1],))

elif cmd == 'SwitchToNewGuildIcon':
  if len(args) != 2:
    print 'SwitchToNewGuildIcon requires 2 args'
    sys.exit(1)
  pp.pprint(client.SwitchToNewGuildIcon(eval(args[0]),args[1],))

elif cmd == 'TryToPayForGuildIconChange':
  if len(args) != 2:
    print 'TryToPayForGuildIconChange requires 2 args'
    sys.exit(1)
  pp.pprint(client.TryToPayForGuildIconChange(eval(args[0]),eval(args[1]),))

elif cmd == 'AcquireGuildLock':
  if len(args) != 2:
    print 'AcquireGuildLock requires 2 args'
    sys.exit(1)
  pp.pprint(client.AcquireGuildLock(eval(args[0]),args[1],))

elif cmd == 'ReleaseGuildLock':
  if len(args) != 2:
    print 'ReleaseGuildLock requires 2 args'
    sys.exit(1)
  pp.pprint(client.ReleaseGuildLock(eval(args[0]),args[1],))

elif cmd == 'StopGuildSiege':
  if len(args) != 2:
    print 'StopGuildSiege requires 2 args'
    sys.exit(1)
  pp.pprint(client.StopGuildSiege(eval(args[0]),args[1],))

elif cmd == 'AddGuildSuzerain':
  if len(args) != 3:
    print 'AddGuildSuzerain requires 3 args'
    sys.exit(1)
  pp.pprint(client.AddGuildSuzerain(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'RemoveGuildSuzerain':
  if len(args) != 2:
    print 'RemoveGuildSuzerain requires 2 args'
    sys.exit(1)
  pp.pprint(client.RemoveGuildSuzerain(eval(args[0]),args[1],))

elif cmd == 'GetFullGuildDump':
  if len(args) != 2:
    print 'GetFullGuildDump requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetFullGuildDump(eval(args[0]),eval(args[1]),))

elif cmd == 'GetFreeGuildBankTalents':
  if len(args) != 1:
    print 'GetFreeGuildBankTalents requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetFreeGuildBankTalents(eval(args[0]),))

elif cmd == 'GetTakenGuildBankTalents':
  if len(args) != 1:
    print 'GetTakenGuildBankTalents requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetTakenGuildBankTalents(eval(args[0]),))

elif cmd == 'ReturnTalentToOwner':
  if len(args) != 3:
    print 'ReturnTalentToOwner requires 3 args'
    sys.exit(1)
  pp.pprint(client.ReturnTalentToOwner(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'ReturnTalentToGuildBank':
  if len(args) != 3:
    print 'ReturnTalentToGuildBank requires 3 args'
    sys.exit(1)
  pp.pprint(client.ReturnTalentToGuildBank(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'SendMessageToUser':
  if len(args) != 6:
    print 'SendMessageToUser requires 6 args'
    sys.exit(1)
  pp.pprint(client.SendMessageToUser(args[0],eval(args[1]),args[2],args[3],args[4],args[5],))

elif cmd == 'GetAccountAdminMessages':
  if len(args) != 1:
    print 'GetAccountAdminMessages requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountAdminMessages(args[0],))

elif cmd == 'UserOperation':
  if len(args) != 8:
    print 'UserOperation requires 8 args'
    sys.exit(1)
  pp.pprint(client.UserOperation(eval(args[0]),eval(args[1]),eval(args[2]),args[3],eval(args[4]),args[5],eval(args[6]),eval(args[7]),))

elif cmd == 'ResetUserAccount':
  if len(args) != 2:
    print 'ResetUserAccount requires 2 args'
    sys.exit(1)
  pp.pprint(client.ResetUserAccount(args[0],args[1],))

elif cmd == 'DeleteUserAccount':
  if len(args) != 2:
    print 'DeleteUserAccount requires 2 args'
    sys.exit(1)
  pp.pprint(client.DeleteUserAccount(args[0],args[1],))

elif cmd == 'KickUser':
  if len(args) != 2:
    print 'KickUser requires 2 args'
    sys.exit(1)
  pp.pprint(client.KickUser(args[0],args[1],))

elif cmd == 'EditNickname':
  if len(args) != 3:
    print 'EditNickname requires 3 args'
    sys.exit(1)
  pp.pprint(client.EditNickname(args[0],args[1],args[2],))

elif cmd == 'PayEditNickname':
  if len(args) != 2:
    print 'PayEditNickname requires 2 args'
    sys.exit(1)
  pp.pprint(client.PayEditNickname(args[0],args[1],))

elif cmd == 'PayChangeFraction':
  if len(args) != 2:
    print 'PayChangeFraction requires 2 args'
    sys.exit(1)
  pp.pprint(client.PayChangeFraction(args[0],eval(args[1]),))

elif cmd == 'GetPrices':
  if len(args) != 3:
    print 'GetPrices requires 3 args'
    sys.exit(1)
  pp.pprint(client.GetPrices(args[0],eval(args[1]),args[2],))

elif cmd == 'BuyService':
  if len(args) != 3:
    print 'BuyService requires 3 args'
    sys.exit(1)
  pp.pprint(client.BuyService(args[0],eval(args[1]),eval(args[2]),))

elif cmd == 'PayService':
  if len(args) != 4:
    print 'PayService requires 4 args'
    sys.exit(1)
  pp.pprint(client.PayService(args[0],eval(args[1]),eval(args[2]),args[3],))

elif cmd == 'BuyTournamentTicket':
  if len(args) != 2:
    print 'BuyTournamentTicket requires 2 args'
    sys.exit(1)
  pp.pprint(client.BuyTournamentTicket(args[0],eval(args[1]),))

elif cmd == 'CreateBroadcast':
  if len(args) != 2:
    print 'CreateBroadcast requires 2 args'
    sys.exit(1)
  pp.pprint(client.CreateBroadcast(eval(args[0]),args[1],))

elif cmd == 'GetBroadcastLocales':
  if len(args) != 0:
    print 'GetBroadcastLocales requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetBroadcastLocales())

elif cmd == 'EditBroadcast':
  if len(args) != 2:
    print 'EditBroadcast requires 2 args'
    sys.exit(1)
  pp.pprint(client.EditBroadcast(eval(args[0]),args[1],))

elif cmd == 'DeleteBroadcast':
  if len(args) != 2:
    print 'DeleteBroadcast requires 2 args'
    sys.exit(1)
  pp.pprint(client.DeleteBroadcast(eval(args[0]),args[1],))

elif cmd == 'GetBroadcastList':
  if len(args) != 2:
    print 'GetBroadcastList requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetBroadcastList(eval(args[0]),eval(args[1]),))

elif cmd == 'StartMessageRotation':
  if len(args) != 2:
    print 'StartMessageRotation requires 2 args'
    sys.exit(1)
  pp.pprint(client.StartMessageRotation(eval(args[0]),args[1],))

elif cmd == 'StopMessageRotation':
  if len(args) != 2:
    print 'StopMessageRotation requires 2 args'
    sys.exit(1)
  pp.pprint(client.StopMessageRotation(eval(args[0]),args[1],))

elif cmd == 'GetSocServerVersion':
  if len(args) != 0:
    print 'GetSocServerVersion requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetSocServerVersion())

elif cmd == 'GetFullUserDump':
  if len(args) != 2:
    print 'GetFullUserDump requires 2 args'
    sys.exit(1)
  pp.pprint(client.GetFullUserDump(args[0],eval(args[1]),))

elif cmd == 'ApplyFullUserDump':
  if len(args) != 2:
    print 'ApplyFullUserDump requires 2 args'
    sys.exit(1)
  pp.pprint(client.ApplyFullUserDump(args[0],args[1],))

elif cmd == 'RemoveFakeAuid':
  if len(args) != 1:
    print 'RemoveFakeAuid requires 1 args'
    sys.exit(1)
  pp.pprint(client.RemoveFakeAuid(args[0],))

elif cmd == 'GetBackups':
  if len(args) != 0:
    print 'GetBackups requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetBackups())

elif cmd == 'GetBrokenUserDump':
  if len(args) != 3:
    print 'GetBrokenUserDump requires 3 args'
    sys.exit(1)
  pp.pprint(client.GetBrokenUserDump(args[0],args[1],eval(args[2]),))

elif cmd == 'GetBrokenUserDumpByNickname':
  if len(args) != 3:
    print 'GetBrokenUserDumpByNickname requires 3 args'
    sys.exit(1)
  pp.pprint(client.GetBrokenUserDumpByNickname(args[0],args[1],eval(args[2]),))

elif cmd == 'CheckAccountValidity':
  if len(args) != 1:
    print 'CheckAccountValidity requires 1 args'
    sys.exit(1)
  pp.pprint(client.CheckAccountValidity(args[0],))

elif cmd == 'FixAccount':
  if len(args) != 2:
    print 'FixAccount requires 2 args'
    sys.exit(1)
  pp.pprint(client.FixAccount(args[0],args[1],))

elif cmd == 'ActivateEmail':
  if len(args) != 2:
    print 'ActivateEmail requires 2 args'
    sys.exit(1)
  pp.pprint(client.ActivateEmail(args[0],args[1],))

elif cmd == 'FlushServerId':
  if len(args) != 2:
    print 'FlushServerId requires 2 args'
    sys.exit(1)
  pp.pprint(client.FlushServerId(args[0],args[1],))

elif cmd == 'AddUserRestriction':
  if len(args) != 3:
    print 'AddUserRestriction requires 3 args'
    sys.exit(1)
  pp.pprint(client.AddUserRestriction(args[0],args[1],args[2],))

elif cmd == 'EditAccountDbValue':
  if len(args) != 4:
    print 'EditAccountDbValue requires 4 args'
    sys.exit(1)
  pp.pprint(client.EditAccountDbValue(args[0],args[1],args[2],args[3],))

elif cmd == 'RegisterPayment':
  if len(args) != 4:
    print 'RegisterPayment requires 4 args'
    sys.exit(1)
  pp.pprint(client.RegisterPayment(eval(args[0]),eval(args[1]),args[2],args[3],))

elif cmd == 'GetPaymentBonusActions':
  if len(args) != 1:
    print 'GetPaymentBonusActions requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetPaymentBonusActions(eval(args[0]),))

elif cmd == 'ReplenishUserGold':
  if len(args) != 3:
    print 'ReplenishUserGold requires 3 args'
    sys.exit(1)
  pp.pprint(client.ReplenishUserGold(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'UpdateUserGold':
  if len(args) != 1:
    print 'UpdateUserGold requires 1 args'
    sys.exit(1)
  pp.pprint(client.UpdateUserGold(eval(args[0]),))

elif cmd == 'GetQuests':
  if len(args) != 1:
    print 'GetQuests requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetQuests(eval(args[0]),))

elif cmd == 'ChangeQuest':
  if len(args) != 4:
    print 'ChangeQuest requires 4 args'
    sys.exit(1)
  pp.pprint(client.ChangeQuest(eval(args[0]),eval(args[1]),eval(args[2]),args[3],))

elif cmd == 'UpdateGeoshowFlag':
  if len(args) != 2:
    print 'UpdateGeoshowFlag requires 2 args'
    sys.exit(1)
  pp.pprint(client.UpdateGeoshowFlag(eval(args[0]),eval(args[1]),))

elif cmd == 'ApplyDLC':
  if len(args) != 2:
    print 'ApplyDLC requires 2 args'
    sys.exit(1)
  pp.pprint(client.ApplyDLC(eval(args[0]),args[1],))

elif cmd == 'GetDynamicQuestInfo':
  if len(args) != 0:
    print 'GetDynamicQuestInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetDynamicQuestInfo())

elif cmd == 'GetDynamicQuestById':
  if len(args) != 1:
    print 'GetDynamicQuestById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetDynamicQuestById(eval(args[0]),))

elif cmd == 'AddDynamicQuest':
  if len(args) != 3:
    print 'AddDynamicQuest requires 3 args'
    sys.exit(1)
  pp.pprint(client.AddDynamicQuest(args[0],args[1],args[2],))

elif cmd == 'RemoveDynamicQuest':
  if len(args) != 2:
    print 'RemoveDynamicQuest requires 2 args'
    sys.exit(1)
  pp.pprint(client.RemoveDynamicQuest(eval(args[0]),args[1],))

elif cmd == 'EditDynamicQuest':
  if len(args) != 3:
    print 'EditDynamicQuest requires 3 args'
    sys.exit(1)
  pp.pprint(client.EditDynamicQuest(eval(args[0]),args[1],args[2],))

elif cmd == 'GetDynamicQuestPullsInfo':
  if len(args) != 0:
    print 'GetDynamicQuestPullsInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetDynamicQuestPullsInfo())

elif cmd == 'GetDynamicQuestPullById':
  if len(args) != 1:
    print 'GetDynamicQuestPullById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetDynamicQuestPullById(eval(args[0]),))

elif cmd == 'GetAuidsLists':
  if len(args) != 0:
    print 'GetAuidsLists requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetAuidsLists())

elif cmd == 'GetAuidsListById':
  if len(args) != 1:
    print 'GetAuidsListById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAuidsListById(eval(args[0]),))

elif cmd == 'AddAuidsList':
  if len(args) != 2:
    print 'AddAuidsList requires 2 args'
    sys.exit(1)
  pp.pprint(client.AddAuidsList(eval(args[0]),args[1],))

elif cmd == 'EditAuidsList':
  if len(args) != 2:
    print 'EditAuidsList requires 2 args'
    sys.exit(1)
  pp.pprint(client.EditAuidsList(eval(args[0]),args[1],))

elif cmd == 'RemoveAuidsList':
  if len(args) != 1:
    print 'RemoveAuidsList requires 1 args'
    sys.exit(1)
  pp.pprint(client.RemoveAuidsList(eval(args[0]),))

elif cmd == 'AddDynamicQuestPull':
  if len(args) != 2:
    print 'AddDynamicQuestPull requires 2 args'
    sys.exit(1)
  pp.pprint(client.AddDynamicQuestPull(eval(args[0]),args[1],))

elif cmd == 'EditDynamicQuestPull':
  if len(args) != 2:
    print 'EditDynamicQuestPull requires 2 args'
    sys.exit(1)
  pp.pprint(client.EditDynamicQuestPull(eval(args[0]),args[1],))

elif cmd == 'RemoveDynamicQuestPull':
  if len(args) != 3:
    print 'RemoveDynamicQuestPull requires 3 args'
    sys.exit(1)
  pp.pprint(client.RemoveDynamicQuestPull(eval(args[0]),args[1],args[2],))

elif cmd == 'AddDynamicQuestsToPull':
  if len(args) != 4:
    print 'AddDynamicQuestsToPull requires 4 args'
    sys.exit(1)
  pp.pprint(client.AddDynamicQuestsToPull(eval(args[0]),eval(args[1]),args[2],args[3],))

elif cmd == 'RemoveDynamicQuestsFromPull':
  if len(args) != 4:
    print 'RemoveDynamicQuestsFromPull requires 4 args'
    sys.exit(1)
  pp.pprint(client.RemoveDynamicQuestsFromPull(eval(args[0]),eval(args[1]),args[2],args[3],))

elif cmd == 'GetAccountFlags':
  if len(args) != 1:
    print 'GetAccountFlags requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountFlags(args[0],))

elif cmd == 'UnlockFlag':
  if len(args) != 4:
    print 'UnlockFlag requires 4 args'
    sys.exit(1)
  pp.pprint(client.UnlockFlag(args[0],args[1],args[2],args[3],))

elif cmd == 'LockFlag':
  if len(args) != 4:
    print 'LockFlag requires 4 args'
    sys.exit(1)
  pp.pprint(client.LockFlag(args[0],args[1],args[2],args[3],))

elif cmd == 'BindToGeolocation':
  if len(args) != 5:
    print 'BindToGeolocation requires 5 args'
    sys.exit(1)
  pp.pprint(client.BindToGeolocation(eval(args[0]),args[1],args[2],args[3],args[4],))

elif cmd == 'GetTalentsEvents':
  if len(args) != 0:
    print 'GetTalentsEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetTalentsEvents())

elif cmd == 'GetResourceEvents':
  if len(args) != 0:
    print 'GetResourceEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetResourceEvents())

elif cmd == 'AddMassOperation':
  if len(args) != 2:
    print 'AddMassOperation requires 2 args'
    sys.exit(1)
  pp.pprint(client.AddMassOperation(eval(args[0]),args[1],))

elif cmd == 'GetMassOperationsInfo':
  if len(args) != 0:
    print 'GetMassOperationsInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetMassOperationsInfo())

elif cmd == 'DeleteMassOperationInfo':
  if len(args) != 1:
    print 'DeleteMassOperationInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.DeleteMassOperationInfo(eval(args[0]),))

elif cmd == 'GetAvailableEvents':
  if len(args) != 0:
    print 'GetAvailableEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetAvailableEvents())

elif cmd == 'ChangeEventStateById':
  if len(args) != 2:
    print 'ChangeEventStateById requires 2 args'
    sys.exit(1)
  pp.pprint(client.ChangeEventStateById(eval(args[0]),eval(args[1]),))

elif cmd == 'DeleteEventById':
  if len(args) != 1:
    print 'DeleteEventById requires 1 args'
    sys.exit(1)
  pp.pprint(client.DeleteEventById(eval(args[0]),))

elif cmd == 'GetTechsInfos':
  if len(args) != 0:
    print 'GetTechsInfos requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetTechsInfos())

elif cmd == 'GetTechsInfoById':
  if len(args) != 1:
    print 'GetTechsInfoById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetTechsInfoById(eval(args[0]),))

elif cmd == 'AddTechs':
  if len(args) != 1:
    print 'AddTechs requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddTechs(eval(args[0]),))

elif cmd == 'EditTechs':
  if len(args) != 1:
    print 'EditTechs requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditTechs(eval(args[0]),))

elif cmd == 'GetCustomEvents':
  if len(args) != 0:
    print 'GetCustomEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetCustomEvents())

elif cmd == 'GetCustomEventById':
  if len(args) != 1:
    print 'GetCustomEventById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetCustomEventById(eval(args[0]),))

elif cmd == 'AddCustomEvent':
  if len(args) != 1:
    print 'AddCustomEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddCustomEvent(eval(args[0]),))

elif cmd == 'EditCustomEvent':
  if len(args) != 1:
    print 'EditCustomEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditCustomEvent(eval(args[0]),))

elif cmd == 'GetCustomMaps':
  if len(args) != 0:
    print 'GetCustomMaps requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetCustomMaps())

elif cmd == 'GetCustomMapById':
  if len(args) != 1:
    print 'GetCustomMapById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetCustomMapById(eval(args[0]),))

elif cmd == 'AddCustomMap':
  if len(args) != 1:
    print 'AddCustomMap requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddCustomMap(eval(args[0]),))

elif cmd == 'EditCustomMap':
  if len(args) != 1:
    print 'EditCustomMap requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditCustomMap(eval(args[0]),))

elif cmd == 'GetTalentDropRarities':
  if len(args) != 0:
    print 'GetTalentDropRarities requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetTalentDropRarities())

elif cmd == 'GetTalentDropRarityById':
  if len(args) != 1:
    print 'GetTalentDropRarityById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetTalentDropRarityById(eval(args[0]),))

elif cmd == 'AddTalentDropRarities':
  if len(args) != 1:
    print 'AddTalentDropRarities requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddTalentDropRarities(eval(args[0]),))

elif cmd == 'EditTalentDropRarities':
  if len(args) != 1:
    print 'EditTalentDropRarities requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditTalentDropRarities(eval(args[0]),))

elif cmd == 'GetNewsBanners':
  if len(args) != 0:
    print 'GetNewsBanners requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetNewsBanners())

elif cmd == 'GetNewsBannerById':
  if len(args) != 1:
    print 'GetNewsBannerById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetNewsBannerById(eval(args[0]),))

elif cmd == 'AddNewsBanner':
  if len(args) != 1:
    print 'AddNewsBanner requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddNewsBanner(eval(args[0]),))

elif cmd == 'EditNewsBanner':
  if len(args) != 1:
    print 'EditNewsBanner requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditNewsBanner(eval(args[0]),))

elif cmd == 'GetSkinPrices':
  if len(args) != 0:
    print 'GetSkinPrices requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetSkinPrices())

elif cmd == 'GetSkinPriceById':
  if len(args) != 1:
    print 'GetSkinPriceById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetSkinPriceById(eval(args[0]),))

elif cmd == 'AddSkinPricesEvent':
  if len(args) != 1:
    print 'AddSkinPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddSkinPricesEvent(eval(args[0]),))

elif cmd == 'EditSkinPricesEvent':
  if len(args) != 1:
    print 'EditSkinPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditSkinPricesEvent(eval(args[0]),))

elif cmd == 'GetHeroPrices':
  if len(args) != 0:
    print 'GetHeroPrices requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetHeroPrices())

elif cmd == 'GetHeroPriceById':
  if len(args) != 1:
    print 'GetHeroPriceById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetHeroPriceById(eval(args[0]),))

elif cmd == 'AddHeroPricesEvent':
  if len(args) != 1:
    print 'AddHeroPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddHeroPricesEvent(eval(args[0]),))

elif cmd == 'EditHeroPricesEvent':
  if len(args) != 1:
    print 'EditHeroPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditHeroPricesEvent(eval(args[0]),))

elif cmd == 'GetTransmutationTalentsPerPerl':
  if len(args) != 0:
    print 'GetTransmutationTalentsPerPerl requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetTransmutationTalentsPerPerl())

elif cmd == 'GetTransmutationTalentsPerPerlById':
  if len(args) != 1:
    print 'GetTransmutationTalentsPerPerlById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetTransmutationTalentsPerPerlById(eval(args[0]),))

elif cmd == 'AddTalentPerPerlEvent':
  if len(args) != 1:
    print 'AddTalentPerPerlEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddTalentPerPerlEvent(eval(args[0]),))

elif cmd == 'EditTalentPerPerlEvent':
  if len(args) != 1:
    print 'EditTalentPerPerlEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditTalentPerPerlEvent(eval(args[0]),))

elif cmd == 'GetRerollShopSlots':
  if len(args) != 0:
    print 'GetRerollShopSlots requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopSlots())

elif cmd == 'GetRerollShopSlotsById':
  if len(args) != 1:
    print 'GetRerollShopSlotsById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopSlotsById(eval(args[0]),))

elif cmd == 'AddRerollShopSlotsEvent':
  if len(args) != 1:
    print 'AddRerollShopSlotsEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopSlotsEvent(eval(args[0]),))

elif cmd == 'EditRerollShopSlotsEvent':
  if len(args) != 1:
    print 'EditRerollShopSlotsEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopSlotsEvent(eval(args[0]),))

elif cmd == 'GetRerollShopPrices':
  if len(args) != 0:
    print 'GetRerollShopPrices requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopPrices())

elif cmd == 'GetRerollShopPriceById':
  if len(args) != 1:
    print 'GetRerollShopPriceById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopPriceById(eval(args[0]),))

elif cmd == 'AddRerollShopPriceEvent':
  if len(args) != 1:
    print 'AddRerollShopPriceEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopPriceEvent(eval(args[0]),))

elif cmd == 'EditRerollShopPriceEvent':
  if len(args) != 1:
    print 'EditRerollShopPriceEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopPriceEvent(eval(args[0]),))

elif cmd == 'GetReforgeTalentPrice':
  if len(args) != 0:
    print 'GetReforgeTalentPrice requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetReforgeTalentPrice())

elif cmd == 'GetReforgeTalentPriceById':
  if len(args) != 1:
    print 'GetReforgeTalentPriceById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetReforgeTalentPriceById(eval(args[0]),))

elif cmd == 'AddReforgeTalentPriceEvent':
  if len(args) != 1:
    print 'AddReforgeTalentPriceEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddReforgeTalentPriceEvent(eval(args[0]),))

elif cmd == 'EditReforgeTalentPriceEvent':
  if len(args) != 1:
    print 'EditReforgeTalentPriceEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditReforgeTalentPriceEvent(eval(args[0]),))

elif cmd == 'GetRerollShopGroupPrices':
  if len(args) != 0:
    print 'GetRerollShopGroupPrices requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupPrices())

elif cmd == 'GetRerollShopGroupPriceById':
  if len(args) != 1:
    print 'GetRerollShopGroupPriceById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupPriceById(eval(args[0]),))

elif cmd == 'AddRerollShopGroupPricesEvent':
  if len(args) != 1:
    print 'AddRerollShopGroupPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopGroupPricesEvent(eval(args[0]),))

elif cmd == 'EditRerollShopGroupPricesEvent':
  if len(args) != 1:
    print 'EditRerollShopGroupPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopGroupPricesEvent(eval(args[0]),))

elif cmd == 'GetRerollShopGroupCurrencies':
  if len(args) != 0:
    print 'GetRerollShopGroupCurrencies requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupCurrencies())

elif cmd == 'GetRerollShopGroupCurrenciesById':
  if len(args) != 1:
    print 'GetRerollShopGroupCurrenciesById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupCurrenciesById(eval(args[0]),))

elif cmd == 'AddRerollShopGroupCurrenciesEvent':
  if len(args) != 1:
    print 'AddRerollShopGroupCurrenciesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopGroupCurrenciesEvent(eval(args[0]),))

elif cmd == 'EditRerollShopGroupCurrenciesEvent':
  if len(args) != 1:
    print 'EditRerollShopGroupCurrenciesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopGroupCurrenciesEvent(eval(args[0]),))

elif cmd == 'GetRerollShopSlotPrices':
  if len(args) != 0:
    print 'GetRerollShopSlotPrices requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopSlotPrices())

elif cmd == 'GetRerollShopSlotPriceById':
  if len(args) != 1:
    print 'GetRerollShopSlotPriceById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopSlotPriceById(eval(args[0]),))

elif cmd == 'AddRerollShopSlotPricesEvent':
  if len(args) != 1:
    print 'AddRerollShopSlotPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopSlotPricesEvent(eval(args[0]),))

elif cmd == 'EditRerollShopSlotPricesEvent':
  if len(args) != 1:
    print 'EditRerollShopSlotPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopSlotPricesEvent(eval(args[0]),))

elif cmd == 'GetRerollShopGroupProbabilities':
  if len(args) != 0:
    print 'GetRerollShopGroupProbabilities requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupProbabilities())

elif cmd == 'GetRerollShopGroupProbabilityById':
  if len(args) != 1:
    print 'GetRerollShopGroupProbabilityById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupProbabilityById(eval(args[0]),))

elif cmd == 'AddRerollShopGroupProbabilityEvent':
  if len(args) != 1:
    print 'AddRerollShopGroupProbabilityEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopGroupProbabilityEvent(eval(args[0]),))

elif cmd == 'EditRerollShopGroupProbabilityEvent':
  if len(args) != 1:
    print 'EditRerollShopGroupProbabilityEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopGroupProbabilityEvent(eval(args[0]),))

elif cmd == 'GetRerollShopSlotAmount':
  if len(args) != 0:
    print 'GetRerollShopSlotAmount requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopSlotAmount())

elif cmd == 'GetRerollShopSlotAmountById':
  if len(args) != 1:
    print 'GetRerollShopSlotAmountById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopSlotAmountById(eval(args[0]),))

elif cmd == 'AddRerollShopSlotAmountsEvent':
  if len(args) != 1:
    print 'AddRerollShopSlotAmountsEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopSlotAmountsEvent(eval(args[0]),))

elif cmd == 'EditRerollShopSlotAmountsEvent':
  if len(args) != 1:
    print 'EditRerollShopSlotAmountsEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopSlotAmountsEvent(eval(args[0]),))

elif cmd == 'GetFirstBuyPrices':
  if len(args) != 0:
    print 'GetFirstBuyPrices requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetFirstBuyPrices())

elif cmd == 'GetFirstBuyPriceById':
  if len(args) != 1:
    print 'GetFirstBuyPriceById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetFirstBuyPriceById(eval(args[0]),))

elif cmd == 'AddFirstBuyPricesEvent':
  if len(args) != 1:
    print 'AddFirstBuyPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddFirstBuyPricesEvent(eval(args[0]),))

elif cmd == 'EditFirstBuyPricesEvent':
  if len(args) != 1:
    print 'EditFirstBuyPricesEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditFirstBuyPricesEvent(eval(args[0]),))

elif cmd == 'GetRerollShopPremiumNotInactive':
  if len(args) != 0:
    print 'GetRerollShopPremiumNotInactive requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopPremiumNotInactive())

elif cmd == 'GetRerollShopPremiumNotInactiveById':
  if len(args) != 1:
    print 'GetRerollShopPremiumNotInactiveById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopPremiumNotInactiveById(eval(args[0]),))

elif cmd == 'AddRerollShopPremiumNotInactiveEvent':
  if len(args) != 1:
    print 'AddRerollShopPremiumNotInactiveEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopPremiumNotInactiveEvent(eval(args[0]),))

elif cmd == 'EditRerollShopPremiumNotInactiveEvent':
  if len(args) != 1:
    print 'EditRerollShopPremiumNotInactiveEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopPremiumNotInactiveEvent(eval(args[0]),))

elif cmd == 'GetRerollShopGroupSlots':
  if len(args) != 0:
    print 'GetRerollShopGroupSlots requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupSlots())

elif cmd == 'GetRerollShopGroupSlotsById':
  if len(args) != 1:
    print 'GetRerollShopGroupSlotsById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopGroupSlotsById(eval(args[0]),))

elif cmd == 'AddRerollShopGroupSlotsEvent':
  if len(args) != 1:
    print 'AddRerollShopGroupSlotsEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopGroupSlotsEvent(eval(args[0]),))

elif cmd == 'EditRerollShopGroupSlotsEvent':
  if len(args) != 1:
    print 'EditRerollShopGroupSlotsEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopGroupSlotsEvent(eval(args[0]),))

elif cmd == 'GetRerollShopBanners':
  if len(args) != 0:
    print 'GetRerollShopBanners requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopBanners())

elif cmd == 'GetRerollShopBannerById':
  if len(args) != 1:
    print 'GetRerollShopBannerById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopBannerById(eval(args[0]),))

elif cmd == 'AddRerollShopBanner':
  if len(args) != 1:
    print 'AddRerollShopBanner requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopBanner(eval(args[0]),))

elif cmd == 'EditRerollShopBanner':
  if len(args) != 1:
    print 'EditRerollShopBanner requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopBanner(eval(args[0]),))

elif cmd == 'GetRerollShopTooltips':
  if len(args) != 0:
    print 'GetRerollShopTooltips requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopTooltips())

elif cmd == 'GetRerollShopTooltipById':
  if len(args) != 1:
    print 'GetRerollShopTooltipById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRerollShopTooltipById(eval(args[0]),))

elif cmd == 'AddRerollShopTooltip':
  if len(args) != 1:
    print 'AddRerollShopTooltip requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRerollShopTooltip(eval(args[0]),))

elif cmd == 'EditRerollShopTooltip':
  if len(args) != 1:
    print 'EditRerollShopTooltip requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRerollShopTooltip(eval(args[0]),))

elif cmd == 'GetRollEvents':
  if len(args) != 0:
    print 'GetRollEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetRollEvents())

elif cmd == 'GetRollEventById':
  if len(args) != 1:
    print 'GetRollEventById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetRollEventById(eval(args[0]),))

elif cmd == 'AddRollEvent':
  if len(args) != 1:
    print 'AddRollEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddRollEvent(eval(args[0]),))

elif cmd == 'EditRollEvent':
  if len(args) != 1:
    print 'EditRollEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditRollEvent(eval(args[0]),))

elif cmd == 'GetQuestEvents':
  if len(args) != 0:
    print 'GetQuestEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetQuestEvents())

elif cmd == 'GetQuestEventById':
  if len(args) != 1:
    print 'GetQuestEventById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetQuestEventById(eval(args[0]),))

elif cmd == 'AddQuestEvent':
  if len(args) != 1:
    print 'AddQuestEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddQuestEvent(eval(args[0]),))

elif cmd == 'EditQuestEvent':
  if len(args) != 1:
    print 'EditQuestEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditQuestEvent(eval(args[0]),))

elif cmd == 'GetTradeEvents':
  if len(args) != 0:
    print 'GetTradeEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetTradeEvents())

elif cmd == 'GetTradeEventById':
  if len(args) != 1:
    print 'GetTradeEventById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetTradeEventById(eval(args[0]),))

elif cmd == 'AddTradeEvent':
  if len(args) != 1:
    print 'AddTradeEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddTradeEvent(eval(args[0]),))

elif cmd == 'EditTradeEvent':
  if len(args) != 1:
    print 'EditTradeEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditTradeEvent(eval(args[0]),))

elif cmd == 'GetSeasonEvents':
  if len(args) != 0:
    print 'GetSeasonEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetSeasonEvents())

elif cmd == 'GetSeasonEventById':
  if len(args) != 1:
    print 'GetSeasonEventById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetSeasonEventById(eval(args[0]),))

elif cmd == 'AddSeasonEvent':
  if len(args) != 1:
    print 'AddSeasonEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddSeasonEvent(eval(args[0]),))

elif cmd == 'EditSeasonEvent':
  if len(args) != 1:
    print 'EditSeasonEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditSeasonEvent(eval(args[0]),))

elif cmd == 'GetDonateEvents':
  if len(args) != 0:
    print 'GetDonateEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetDonateEvents())

elif cmd == 'GetDonateEventById':
  if len(args) != 1:
    print 'GetDonateEventById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetDonateEventById(eval(args[0]),))

elif cmd == 'AddDonateEvent':
  if len(args) != 1:
    print 'AddDonateEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddDonateEvent(eval(args[0]),))

elif cmd == 'EditDonateEvent':
  if len(args) != 1:
    print 'EditDonateEvent requires 1 args'
    sys.exit(1)
  pp.pprint(client.EditDonateEvent(eval(args[0]),))

elif cmd == 'GetGWEvents':
  if len(args) != 0:
    print 'GetGWEvents requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetGWEvents())

elif cmd == 'GetGWEventsModelById':
  if len(args) != 1:
    print 'GetGWEventsModelById requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetGWEventsModelById(eval(args[0]),))

elif cmd == 'EditGWEvent':
  if len(args) != 2:
    print 'EditGWEvent requires 2 args'
    sys.exit(1)
  pp.pprint(client.EditGWEvent(eval(args[0]),args[1],))

elif cmd == 'GetAccountFriends':
  if len(args) != 1:
    print 'GetAccountFriends requires 1 args'
    sys.exit(1)
  pp.pprint(client.GetAccountFriends(eval(args[0]),))

elif cmd == 'RemoveFriend':
  if len(args) != 2:
    print 'RemoveFriend requires 2 args'
    sys.exit(1)
  pp.pprint(client.RemoveFriend(eval(args[0]),eval(args[1]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
