#include "stdafx.h"
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "SkinStyles.h"
#include "../Render/material.h"
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace UI
{
namespace SkinStyles
{
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
hash_map<string, NDb::Ptr<NDb::UIFontStyle> > g_fontStyles;
hash_map<string, NDb::Ptr<NDb::BaseUIMaterial> > g_imageMaterials;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void InitAliases( const NDb::UIRoot* _root )
{
  if ( !_root )
    return;

  {
    nstl::vector<NDb::UIStyleAlias>::const_iterator it = _root->styleAliases.begin();
    nstl::vector<NDb::UIStyleAlias>::const_iterator last = _root->styleAliases.end();

    for (; it != last; ++it)
    {
      NDb::Ptr<NDb::BaseUIMaterial> dbMat = NDb::Precache<NDb::BaseUIMaterial>( it->material.GetRawResourcePtr()->GetDBID(), 5 );
      g_imageMaterials[it->name] = dbMat; 
      Render::Material* mat = Render::CreateRenderMaterial( dbMat );
      delete mat;
    }
  }

  {
    nstl::vector<NDb::Ptr<NDb::UIFontStyle>>::const_iterator it = _root->fontStyles.begin();
    nstl::vector<NDb::Ptr<NDb::UIFontStyle>>::const_iterator last = _root->fontStyles.end();

    for (; it != last; ++it)
    {
      if ( *it )
        g_fontStyles[(*it)->styleName] = *it;
    }
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void ReleaseAliases()
{
  g_fontStyles.clear();
  g_imageMaterials.clear();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const NDb::BaseUIMaterial *GetImageMaterial( const string & styleName )
{
  hash_map<string, NDb::Ptr<NDb::BaseUIMaterial> >::iterator it = g_imageMaterials.find( styleName );
  if ( it != g_imageMaterials.end() )
    return it->second.GetPtr();
  return 0;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const NDb::UIFontStyle *GetFontStyle( const string & styleName )
{
	hash_map<string,NDb::Ptr<NDb::UIFontStyle> >::iterator it = g_fontStyles.find( styleName );
	if ( it != g_fontStyles.end() )
		return it->second.GetPtr();
	return 0;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
