## load balancer: делим запросы поровну между всеми подсерверами (портами)
upstream  balance  {
    server   127.0.0.1:8801 max_fails=0 fail_timeout=20s; ##DEBUG: в отладке отправляем всё на один (отладочный) сервер
    ## server   127.0.0.1:8802 max_fails=0 fail_timeout=20s;
}

## доступ к конкретному серверу №1 (на котором, видимо, находится конкретный активный user context)
upstream  one  {
    server   127.0.0.1:8801 max_fails=0 fail_timeout=20s;
}

## доступ к конкретному серверу №2 (на котором, видимо, находится конкретный активный user context)
upstream  two  {
    server   127.0.0.1:8802 max_fails=0 fail_timeout=20s;
}

upstream  login  {
    server   127.0.0.1:8724 max_fails=0 fail_timeout=20s;
}

upstream  login0  {
    server   127.0.0.1:8724 max_fails=0 fail_timeout=20s;
}

upstream  chat  {
    server   127.0.0.1:8720 max_fails=0 fail_timeout=20s;
    server   127.0.0.1:8721 max_fails=0 fail_timeout=20s;
}

## доступ к конкретному серверу чата 0 ()
upstream  chat1  {
    server   127.0.0.1:8720 max_fails=0 fail_timeout=20s;
}
upstream  chat2  {
    server   127.0.0.1:8721 max_fails=0 fail_timeout=20s;
}

# upstream  chat3  {
#    server   127.0.0.1:8010 max_fails=0 fail_timeout=20s;
# }
# upstream  chat4  {
#    server   127.0.0.1:8011 max_fails=0 fail_timeout=20s;
# }

upstream  pwc {
    server   127.0.0.1:8710 max_fails=0 fail_timeout=20s;
}

upstream  pwcf {
    server   127.0.0.1:8711 max_fails=0 fail_timeout=20s;
}

upstream  marketing {
    server   127.0.0.1:8712 max_fails=0 fail_timeout=20s;
}

upstream  ev {
    server   127.0.0.1:8719 max_fails=0 fail_timeout=20s;
}

## social exchange
upstream  se_balance { # делим запросы поровну между всеми подсерверами (портами)
    server   127.0.0.1:8811 max_fails=0 fail_timeout=20s;
    server   127.0.0.1:8812 max_fails=0 fail_timeout=20s;
}

upstream  se_ein {
    server   127.0.0.1:8811 max_fails=0 fail_timeout=20s;
}

upstream  se_zwei {
    server   127.0.0.1:8812 max_fails=0 fail_timeout=20s;
}

server {
    listen       98;
    #server_name  pw.nivalnetwork.com;
    access_log  /var/log/nginx/nginx.ss.access.98.log;
    error_log   /var/log/nginx/nginx.ss.error.98.log;

    location = /ping {
        empty_gif;
    }

    ## доступ к произвольном серверу логина
    location /login {
        proxy_pass  http://login;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## доступ к конкретному серверу логина
    location /login0 {
        proxy_pass  http://login0/;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## доступ к конкретному серверу №1 (на котором, видимо, находится конкретный активный user context)
    location /one {
        proxy_pass  http://one;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## доступ к конкретному серверу №2 (на котором, видимо, находится конкретный активный user context)
    location /two {
        proxy_pass  http://two;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## доступ к произвольном серверу чата
    location /chat {
        proxy_pass  http://chat;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## доступ к конкретному серверу чата №1
    location /chat1 {
        proxy_pass  http://chat1;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## доступ к конкретному серверу чата №2
    location /chat2 {
        proxy_pass  http://chat2;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## load balancer: запросы к localhost голому делим поровну между всеми подсерверами (портами)
    location = / {
        proxy_pass  http://balance;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    # запросы к pw connect frontend (делаем rewrite, чтобы в сервис URL приходил уже без /pwcf)
    location /pwcf/ {
        proxy_pass  http://pwcf/;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    # запросы к marketing service (делаем rewrite, чтобы в сервис URL приходил уже без /marketing)
    location /marketing/ {
        proxy_pass  http://marketing/;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    # запросы к marketing service (делаем rewrite, чтобы в сервис URL приходил уже без /ev)
    location /ev/ {
        proxy_pass  http://ev/;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    ## запросы насчет иконок и роботов просто посылаем
    location = /favicon.ico {
        deny all;
    }

    location = /robots.txt {
        deny all;
    }
}

# HTTPS-трафик (SSL для PW Connect)
server {
    listen       888 default  ssl;
    ssl_certificate     /var/www/dduka_SocialServer/tests/ssl_ca/ca.crt;
    ssl_certificate_key     /var/www/dduka_SocialServer/tests/ssl_ca/ca.key;
    ssl_client_certificate  /var/www/dduka_SocialServer/tests/ssl_ca/ca.crt; # client01.crt
    #ssl_client_certificate  /var/www/dduka_SocialServer/tests/ssl_ca/client01.crt;
    ssl_verify_client on;

    access_log  /var/log/nginx/nginx.ss.access.888.log;
    error_log   /var/log/nginx/nginx.ss.error.888.log;
    #server_name  pw.nivalnetwork.com;

    ssl_session_timeout  5m;
    ssl_protocols  SSLv2 SSLv3 TLSv1;
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;

    # запросы к pw connect
    location /pwc {
        proxy_pass  http://pwc/;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    # запросы к рабочим серверам (балансируем)
    location /ws {
        proxy_pass  http://balance/;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }
}

## внутренний порт, на котором разбрасываем служебные команды по чат-серверам
server {
    listen       8888;
    #server_name  pw.nivalnetwork.com;
    access_log  /var/log/nginx/nginx.ss.access.8888.log;
    error_log   /var/log/nginx/nginx.ss.error.8888.log;

    location /se {
        proxy_pass  http://se_balance/;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    location /ein {
        proxy_pass  http://se_ein;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }

    location /zwei {
        proxy_pass  http://se_zwei;
        proxy_connect_timeout      20;
        proxy_send_timeout     30;
        proxy_read_timeout     30;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host      $host;
    }
}
