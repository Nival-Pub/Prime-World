#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:new_style
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from StatisticCore import StatisticService
from StatisticCore.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  void LoginUsers( logins)'
  print '  void LogoutUsers( logins)'
  print '  void FactionSelect( infos)'
  print '  void MoveTalentToSet( infos)'
  print '  void MoveTalentFromSet( infos)'
  print '  void UnlockHero( infos)'
  print '  void MoveHeroToBath( infos)'
  print '  void ResourcesChange( infos)'
  print '  void QuestChange( infos)'
  print '  void DynamicQuestChange( infos)'
  print '  void TournamentQuestChange( infos)'
  print '  void TutorialStateChange( infos)'
  print '  void TalentChange( infos)'
  print '  void JoinPvpSession( infos)'
  print '  void GiveSessionAwards( info)'
  print '  void RatingChange( infos)'
  print '  void HeroLevelChange( infos)'
  print '  void HeroRankChange( infos)'
  print '  void CastleLevelChange( infos)'
  print '  void AfterParty( infos)'
  print '  void LeaverPointsChange( infos)'
  print '  void ReRollShop( infos)'
  print '  void ChatMessages( infos)'
  print '  void ClientPings( infos)'
  print '  void UserClaims( infos)'
  print '  void GMEditUser( infos)'
  print '  void GMUnlockHero( infos)'
  print '  void GMLockHero( infos)'
  print '  void GMOperation( infos)'
  print '  void GMUserOperation( infos)'
  print '  void MonitoringResults( results)'
  print '  void AddIgnore( infos)'
  print '  void RemoveIgnore( infos)'
  print '  void LauncherStart( infos)'
  print '  void LauncherEvents( infos)'
  print '  void LauncherDActions( infos)'
  print '  void SocialRegister( infos)'
  print '  void SocialJoin( infos)'
  print '  void SocialMerge( infos)'
  print '  void GuildCreated( infos)'
  print '  void GuildRenamed( infos)'
  print '  void GuildJoined( infos)'
  print '  void GuildLeaved( infos)'
  print '  void GuildDisbanded( infos)'
  print '  void GuildShopBuy( infos)'
  print '  void GuildSiege( infos)'
  print '  void GuildDailyStats( infos)'
  print '  void GuildInteraction( infos)'
  print '  void GuildPointsChange( infos)'
  print '  void RuneExpire( infos)'
  print '  void RuneUnsoulbound( infos)'
  print '  void RuneReplenish( infos)'
  print '  void RuneHeroApply( infos)'
  print '  void RuneRoll( infos)'
  print '  void GWEventAdd( infos)'
  print '  void GWScoreChange( infos)'
  print '  void QuestEventStageChange( infos)'
  print '  void QuestEventStateChange( infos)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = StatisticService.Client(protocol)
transport.open()

if cmd == 'LoginUsers':
  if len(args) != 1:
    print 'LoginUsers requires 1 args'
    sys.exit(1)
  pp.pprint(client.LoginUsers(eval(args[0]),))

elif cmd == 'LogoutUsers':
  if len(args) != 1:
    print 'LogoutUsers requires 1 args'
    sys.exit(1)
  pp.pprint(client.LogoutUsers(eval(args[0]),))

elif cmd == 'FactionSelect':
  if len(args) != 1:
    print 'FactionSelect requires 1 args'
    sys.exit(1)
  pp.pprint(client.FactionSelect(eval(args[0]),))

elif cmd == 'MoveTalentToSet':
  if len(args) != 1:
    print 'MoveTalentToSet requires 1 args'
    sys.exit(1)
  pp.pprint(client.MoveTalentToSet(eval(args[0]),))

elif cmd == 'MoveTalentFromSet':
  if len(args) != 1:
    print 'MoveTalentFromSet requires 1 args'
    sys.exit(1)
  pp.pprint(client.MoveTalentFromSet(eval(args[0]),))

elif cmd == 'UnlockHero':
  if len(args) != 1:
    print 'UnlockHero requires 1 args'
    sys.exit(1)
  pp.pprint(client.UnlockHero(eval(args[0]),))

elif cmd == 'MoveHeroToBath':
  if len(args) != 1:
    print 'MoveHeroToBath requires 1 args'
    sys.exit(1)
  pp.pprint(client.MoveHeroToBath(eval(args[0]),))

elif cmd == 'ResourcesChange':
  if len(args) != 1:
    print 'ResourcesChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.ResourcesChange(eval(args[0]),))

elif cmd == 'QuestChange':
  if len(args) != 1:
    print 'QuestChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.QuestChange(eval(args[0]),))

elif cmd == 'DynamicQuestChange':
  if len(args) != 1:
    print 'DynamicQuestChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.DynamicQuestChange(eval(args[0]),))

elif cmd == 'TournamentQuestChange':
  if len(args) != 1:
    print 'TournamentQuestChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.TournamentQuestChange(eval(args[0]),))

elif cmd == 'TutorialStateChange':
  if len(args) != 1:
    print 'TutorialStateChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.TutorialStateChange(eval(args[0]),))

elif cmd == 'TalentChange':
  if len(args) != 1:
    print 'TalentChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.TalentChange(eval(args[0]),))

elif cmd == 'JoinPvpSession':
  if len(args) != 1:
    print 'JoinPvpSession requires 1 args'
    sys.exit(1)
  pp.pprint(client.JoinPvpSession(eval(args[0]),))

elif cmd == 'GiveSessionAwards':
  if len(args) != 1:
    print 'GiveSessionAwards requires 1 args'
    sys.exit(1)
  pp.pprint(client.GiveSessionAwards(eval(args[0]),))

elif cmd == 'RatingChange':
  if len(args) != 1:
    print 'RatingChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.RatingChange(eval(args[0]),))

elif cmd == 'HeroLevelChange':
  if len(args) != 1:
    print 'HeroLevelChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.HeroLevelChange(eval(args[0]),))

elif cmd == 'HeroRankChange':
  if len(args) != 1:
    print 'HeroRankChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.HeroRankChange(eval(args[0]),))

elif cmd == 'CastleLevelChange':
  if len(args) != 1:
    print 'CastleLevelChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.CastleLevelChange(eval(args[0]),))

elif cmd == 'AfterParty':
  if len(args) != 1:
    print 'AfterParty requires 1 args'
    sys.exit(1)
  pp.pprint(client.AfterParty(eval(args[0]),))

elif cmd == 'LeaverPointsChange':
  if len(args) != 1:
    print 'LeaverPointsChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.LeaverPointsChange(eval(args[0]),))

elif cmd == 'ReRollShop':
  if len(args) != 1:
    print 'ReRollShop requires 1 args'
    sys.exit(1)
  pp.pprint(client.ReRollShop(eval(args[0]),))

elif cmd == 'ChatMessages':
  if len(args) != 1:
    print 'ChatMessages requires 1 args'
    sys.exit(1)
  pp.pprint(client.ChatMessages(eval(args[0]),))

elif cmd == 'ClientPings':
  if len(args) != 1:
    print 'ClientPings requires 1 args'
    sys.exit(1)
  pp.pprint(client.ClientPings(eval(args[0]),))

elif cmd == 'UserClaims':
  if len(args) != 1:
    print 'UserClaims requires 1 args'
    sys.exit(1)
  pp.pprint(client.UserClaims(eval(args[0]),))

elif cmd == 'GMEditUser':
  if len(args) != 1:
    print 'GMEditUser requires 1 args'
    sys.exit(1)
  pp.pprint(client.GMEditUser(eval(args[0]),))

elif cmd == 'GMUnlockHero':
  if len(args) != 1:
    print 'GMUnlockHero requires 1 args'
    sys.exit(1)
  pp.pprint(client.GMUnlockHero(eval(args[0]),))

elif cmd == 'GMLockHero':
  if len(args) != 1:
    print 'GMLockHero requires 1 args'
    sys.exit(1)
  pp.pprint(client.GMLockHero(eval(args[0]),))

elif cmd == 'GMOperation':
  if len(args) != 1:
    print 'GMOperation requires 1 args'
    sys.exit(1)
  pp.pprint(client.GMOperation(eval(args[0]),))

elif cmd == 'GMUserOperation':
  if len(args) != 1:
    print 'GMUserOperation requires 1 args'
    sys.exit(1)
  pp.pprint(client.GMUserOperation(eval(args[0]),))

elif cmd == 'MonitoringResults':
  if len(args) != 1:
    print 'MonitoringResults requires 1 args'
    sys.exit(1)
  pp.pprint(client.MonitoringResults(eval(args[0]),))

elif cmd == 'AddIgnore':
  if len(args) != 1:
    print 'AddIgnore requires 1 args'
    sys.exit(1)
  pp.pprint(client.AddIgnore(eval(args[0]),))

elif cmd == 'RemoveIgnore':
  if len(args) != 1:
    print 'RemoveIgnore requires 1 args'
    sys.exit(1)
  pp.pprint(client.RemoveIgnore(eval(args[0]),))

elif cmd == 'LauncherStart':
  if len(args) != 1:
    print 'LauncherStart requires 1 args'
    sys.exit(1)
  pp.pprint(client.LauncherStart(eval(args[0]),))

elif cmd == 'LauncherEvents':
  if len(args) != 1:
    print 'LauncherEvents requires 1 args'
    sys.exit(1)
  pp.pprint(client.LauncherEvents(eval(args[0]),))

elif cmd == 'LauncherDActions':
  if len(args) != 1:
    print 'LauncherDActions requires 1 args'
    sys.exit(1)
  pp.pprint(client.LauncherDActions(eval(args[0]),))

elif cmd == 'SocialRegister':
  if len(args) != 1:
    print 'SocialRegister requires 1 args'
    sys.exit(1)
  pp.pprint(client.SocialRegister(eval(args[0]),))

elif cmd == 'SocialJoin':
  if len(args) != 1:
    print 'SocialJoin requires 1 args'
    sys.exit(1)
  pp.pprint(client.SocialJoin(eval(args[0]),))

elif cmd == 'SocialMerge':
  if len(args) != 1:
    print 'SocialMerge requires 1 args'
    sys.exit(1)
  pp.pprint(client.SocialMerge(eval(args[0]),))

elif cmd == 'GuildCreated':
  if len(args) != 1:
    print 'GuildCreated requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildCreated(eval(args[0]),))

elif cmd == 'GuildRenamed':
  if len(args) != 1:
    print 'GuildRenamed requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildRenamed(eval(args[0]),))

elif cmd == 'GuildJoined':
  if len(args) != 1:
    print 'GuildJoined requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildJoined(eval(args[0]),))

elif cmd == 'GuildLeaved':
  if len(args) != 1:
    print 'GuildLeaved requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildLeaved(eval(args[0]),))

elif cmd == 'GuildDisbanded':
  if len(args) != 1:
    print 'GuildDisbanded requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildDisbanded(eval(args[0]),))

elif cmd == 'GuildShopBuy':
  if len(args) != 1:
    print 'GuildShopBuy requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildShopBuy(eval(args[0]),))

elif cmd == 'GuildSiege':
  if len(args) != 1:
    print 'GuildSiege requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildSiege(eval(args[0]),))

elif cmd == 'GuildDailyStats':
  if len(args) != 1:
    print 'GuildDailyStats requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildDailyStats(eval(args[0]),))

elif cmd == 'GuildInteraction':
  if len(args) != 1:
    print 'GuildInteraction requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildInteraction(eval(args[0]),))

elif cmd == 'GuildPointsChange':
  if len(args) != 1:
    print 'GuildPointsChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.GuildPointsChange(eval(args[0]),))

elif cmd == 'RuneExpire':
  if len(args) != 1:
    print 'RuneExpire requires 1 args'
    sys.exit(1)
  pp.pprint(client.RuneExpire(eval(args[0]),))

elif cmd == 'RuneUnsoulbound':
  if len(args) != 1:
    print 'RuneUnsoulbound requires 1 args'
    sys.exit(1)
  pp.pprint(client.RuneUnsoulbound(eval(args[0]),))

elif cmd == 'RuneReplenish':
  if len(args) != 1:
    print 'RuneReplenish requires 1 args'
    sys.exit(1)
  pp.pprint(client.RuneReplenish(eval(args[0]),))

elif cmd == 'RuneHeroApply':
  if len(args) != 1:
    print 'RuneHeroApply requires 1 args'
    sys.exit(1)
  pp.pprint(client.RuneHeroApply(eval(args[0]),))

elif cmd == 'RuneRoll':
  if len(args) != 1:
    print 'RuneRoll requires 1 args'
    sys.exit(1)
  pp.pprint(client.RuneRoll(eval(args[0]),))

elif cmd == 'GWEventAdd':
  if len(args) != 1:
    print 'GWEventAdd requires 1 args'
    sys.exit(1)
  pp.pprint(client.GWEventAdd(eval(args[0]),))

elif cmd == 'GWScoreChange':
  if len(args) != 1:
    print 'GWScoreChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.GWScoreChange(eval(args[0]),))

elif cmd == 'QuestEventStageChange':
  if len(args) != 1:
    print 'QuestEventStageChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.QuestEventStageChange(eval(args[0]),))

elif cmd == 'QuestEventStateChange':
  if len(args) != 1:
    print 'QuestEventStateChange requires 1 args'
    sys.exit(1)
  pp.pprint(client.QuestEventStateChange(eval(args[0]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
