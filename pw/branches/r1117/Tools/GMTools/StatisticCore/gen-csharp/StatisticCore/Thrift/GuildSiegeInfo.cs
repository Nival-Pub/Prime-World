/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace StatisticCore.Thrift
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class GuildSiegeInfo : TBase
  {
    private long _siegeid;
    private long _guildid;
    private int _guildrating;
    private long _targetguildid;
    private int _targetguildrating;
    private long _targetsuzerainid;
    private int _targetsuzerainrating;
    private int _guildpointsprice;
    private int _starttimestamp;
    private int _endtimestamp;
    private List<GuildSiegeParticipantInfo> _participants;
    private long _winnerguildid;

    public long Siegeid
    {
      get
      {
        return _siegeid;
      }
      set
      {
        __isset.siegeid = true;
        this._siegeid = value;
      }
    }

    public long Guildid
    {
      get
      {
        return _guildid;
      }
      set
      {
        __isset.guildid = true;
        this._guildid = value;
      }
    }

    public int Guildrating
    {
      get
      {
        return _guildrating;
      }
      set
      {
        __isset.guildrating = true;
        this._guildrating = value;
      }
    }

    public long Targetguildid
    {
      get
      {
        return _targetguildid;
      }
      set
      {
        __isset.targetguildid = true;
        this._targetguildid = value;
      }
    }

    public int Targetguildrating
    {
      get
      {
        return _targetguildrating;
      }
      set
      {
        __isset.targetguildrating = true;
        this._targetguildrating = value;
      }
    }

    public long Targetsuzerainid
    {
      get
      {
        return _targetsuzerainid;
      }
      set
      {
        __isset.targetsuzerainid = true;
        this._targetsuzerainid = value;
      }
    }

    public int Targetsuzerainrating
    {
      get
      {
        return _targetsuzerainrating;
      }
      set
      {
        __isset.targetsuzerainrating = true;
        this._targetsuzerainrating = value;
      }
    }

    public int Guildpointsprice
    {
      get
      {
        return _guildpointsprice;
      }
      set
      {
        __isset.guildpointsprice = true;
        this._guildpointsprice = value;
      }
    }

    public int Starttimestamp
    {
      get
      {
        return _starttimestamp;
      }
      set
      {
        __isset.starttimestamp = true;
        this._starttimestamp = value;
      }
    }

    public int Endtimestamp
    {
      get
      {
        return _endtimestamp;
      }
      set
      {
        __isset.endtimestamp = true;
        this._endtimestamp = value;
      }
    }

    public List<GuildSiegeParticipantInfo> Participants
    {
      get
      {
        return _participants;
      }
      set
      {
        __isset.participants = true;
        this._participants = value;
      }
    }

    public long Winnerguildid
    {
      get
      {
        return _winnerguildid;
      }
      set
      {
        __isset.winnerguildid = true;
        this._winnerguildid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool siegeid;
      public bool guildid;
      public bool guildrating;
      public bool targetguildid;
      public bool targetguildrating;
      public bool targetsuzerainid;
      public bool targetsuzerainrating;
      public bool guildpointsprice;
      public bool starttimestamp;
      public bool endtimestamp;
      public bool participants;
      public bool winnerguildid;
    }

    public GuildSiegeInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              Siegeid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I64) {
              Guildid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Guildrating = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              Targetguildid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Targetguildrating = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I64) {
              Targetsuzerainid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Targetsuzerainrating = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Guildpointsprice = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Starttimestamp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Endtimestamp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.List) {
              {
                Participants = new List<GuildSiegeParticipantInfo>();
                TList _list25 = iprot.ReadListBegin();
                for( int _i26 = 0; _i26 < _list25.Count; ++_i26)
                {
                  GuildSiegeParticipantInfo _elem27 = new GuildSiegeParticipantInfo();
                  _elem27 = new GuildSiegeParticipantInfo();
                  _elem27.Read(iprot);
                  Participants.Add(_elem27);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I64) {
              Winnerguildid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GuildSiegeInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.siegeid) {
        field.Name = "siegeid";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Siegeid);
        oprot.WriteFieldEnd();
      }
      if (__isset.guildid) {
        field.Name = "guildid";
        field.Type = TType.I64;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Guildid);
        oprot.WriteFieldEnd();
      }
      if (__isset.guildrating) {
        field.Name = "guildrating";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Guildrating);
        oprot.WriteFieldEnd();
      }
      if (__isset.targetguildid) {
        field.Name = "targetguildid";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Targetguildid);
        oprot.WriteFieldEnd();
      }
      if (__isset.targetguildrating) {
        field.Name = "targetguildrating";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Targetguildrating);
        oprot.WriteFieldEnd();
      }
      if (__isset.targetsuzerainid) {
        field.Name = "targetsuzerainid";
        field.Type = TType.I64;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Targetsuzerainid);
        oprot.WriteFieldEnd();
      }
      if (__isset.targetsuzerainrating) {
        field.Name = "targetsuzerainrating";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Targetsuzerainrating);
        oprot.WriteFieldEnd();
      }
      if (__isset.guildpointsprice) {
        field.Name = "guildpointsprice";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Guildpointsprice);
        oprot.WriteFieldEnd();
      }
      if (__isset.starttimestamp) {
        field.Name = "starttimestamp";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Starttimestamp);
        oprot.WriteFieldEnd();
      }
      if (__isset.endtimestamp) {
        field.Name = "endtimestamp";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Endtimestamp);
        oprot.WriteFieldEnd();
      }
      if (Participants != null && __isset.participants) {
        field.Name = "participants";
        field.Type = TType.List;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, Participants.Count));
          foreach (GuildSiegeParticipantInfo _iter28 in Participants)
          {
            _iter28.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.winnerguildid) {
        field.Name = "winnerguildid";
        field.Type = TType.I64;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Winnerguildid);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GuildSiegeInfo(");
      sb.Append("Siegeid: ");
      sb.Append(Siegeid);
      sb.Append(",Guildid: ");
      sb.Append(Guildid);
      sb.Append(",Guildrating: ");
      sb.Append(Guildrating);
      sb.Append(",Targetguildid: ");
      sb.Append(Targetguildid);
      sb.Append(",Targetguildrating: ");
      sb.Append(Targetguildrating);
      sb.Append(",Targetsuzerainid: ");
      sb.Append(Targetsuzerainid);
      sb.Append(",Targetsuzerainrating: ");
      sb.Append(Targetsuzerainrating);
      sb.Append(",Guildpointsprice: ");
      sb.Append(Guildpointsprice);
      sb.Append(",Starttimestamp: ");
      sb.Append(Starttimestamp);
      sb.Append(",Endtimestamp: ");
      sb.Append(Endtimestamp);
      sb.Append(",Participants: ");
      sb.Append(Participants);
      sb.Append(",Winnerguildid: ");
      sb.Append(Winnerguildid);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
