//============================================================================
//  Настройки Game Server
//============================================================================

//  game_trust_gap (в степах)
//  максимальное количество степов которое может быть неподтвержденным, при превышении симуляция останавливается
//  0 - значение по умолчанию (выключено)
game_trust_gap 0

//  game_disconnect_gap (в секундах)
//  Максимальное время, в течении которого клиент может не подтверждать степы.
//  При превышении клиент отключается.
//  0.0 - значение по умолчанию (выключено)
game_disconnect_gap 0.0

//  game_disconnect_waterline (в степах)
//  количество степов при неподтверждении которых выводится warning в лог, если после превышения данного значения
//  кол-во неподтвержденных степов стало меньше, - об это также будет сообщено в лог
//  0 - значение по умолчанию (выключено)
game_disconnect_waterline 100

//  game_afc_time (в секундах)
//  Максимальное время без присланных команд после которого клиент считается 
//  AFC.
//  0.0 - значение по умолчанию (выключено)
game_afc_time 120.0

//  game_afc_disconnect_time (в секундах)
//  Максимальное время без присланных команд после которого клиента отключают.
//  0 - значение по умолчанию (выключено)
game_afc_disconnect_time 180.0

//  game_save_replay 
//  сохранять ли replay
//  0 - значение по умолчанию (выключено)
game_save_replay 0

//  game_replay_buffer_size
//  Size of replay buffer in bytes. Should be large enough to hold commands of game_dump_steps steps.
//  Otherwise it will reallocate buffer dynamically and produce lags.
//  65536 - default value (64KB)
//  game_replay_buffer_size 128000

//  game_replay_file_size
//  Size of preallocated replay file in bytes. Should be large enough to hold the entire replay data.
//  Otherwise the file will be dynamically expanded, which is less efficient. 
//  The file will be truncated to actual size at session's finish.
//  16777216 - default value (16MB)
game_replay_file_size 0 // Currenly set to 0 due to some bug, which causes the replay to remain 16MB

//  game_dump_steps 
//  количество степов которые сохраняются 
//  1200 - значение по умолчанию (2 минуты)
game_dump_steps 2400

//  game_connect_timeout (в секундах)
//  Время, которое игра ждет присоединений клиентов после того как все
//  активные клиенты готовы.
//  7.0 - значение по умолчанию
game_connect_timeout 60.0

//  game_first_connect_timeout (в секундах)
//  Время, которое игра ждет присоединения первого пользователя.
//  Additional functionality is a notification to lobby that first connection
//  of any specific client not yet occurred.
//  120.0 - значение по умолчанию (120 сек)
//game_first_connect_timeout 0.0 // отключено

//  game_confirm_frequency 
//  частота степов которые требуют подтверждения (0 - выключено, 1 - каждый степ 2 - каждый второй)
//  1 - значение по умолчанию 
game_confirm_frequency 2

//  game_simulation_step 
//  частота отсылки команд на клиентов (в миллисекундах)
//  100 - значение по умолчанию (10 шагов в секунду)
game_simulation_step 100

//  game_snapshot_chunk_size
//  Maximum size of world snapshot chunk in bytes. Used for reconnect.
//  1024 - default value
game_snapshot_chunk_size 16000

//  game_snapshot_chunk_max_count
//  Maximum allowed amount of world snapshot chunks. Used for reconnect.
//  4096 - default value
game_snapshot_chunk_max_count 180

//  game_snapshot_send_per_step
//  Maximum amount of data in bytes, which client is allowed to send per step. 
//  Setting 0 will disable the limitation.
//  64000 - dafault value (64k)
//game_snapshot_send_per_step 0 // 0 - Disabled

//  game_snapshot_request_timeout (in seconds)
//  World snapshot request timeout in seconds. If server requested world
//  snapshot from one client and he didn't fulfilled the request within the
//  time limit, the server will try to request from another.
//  0.0 - default value (disabled)
game_snapshot_request_timeout 60.0

//  game_reconnect_enabled
//  Reconnect enabled flag. If set to 0 - game server will ignore reconnect attempts.
//  0 - default value (disabled)
game_reconnect_enabled 1 // Enabled

//  game_delayed_commands_warning_gap
//  Defines after which steps count the server will warn about delayed commands. 0 means disabled.
//  10 - default value (10 steps = 1 second)

//  game_load_timeout (in seconds)
//  Client loading timeout in seconds. Loading is the time between adding
//  client and his "ready" or world request in case of reconnect.
//  Beyond this limit the client will be disconnected by server.
//  420.0 - default value (7 minutes)
//game_load_timeout 0.0 // Disabled

//  game_snapshot_apply_timeout (in seconds)
//  World snapshot applying timeout in seconds. Snapshot applying is the time
//  between sending world snapshot to reconnecting client and his "ready".
//  Beyond this limit the client will be disconnected by server.
//  60.0 - default value
//game_snapshot_apply_timeout 0.0 // Disabled

//  game_finish_timeout (in seconds)
//  Defines a maximum time to wait for game finish report from other clients,
//  after first report is received.
//  30.0 - default value
//game_finish_timeout 0.0 // Disabled

//  game_command_max_size
//  Size limitation in bytes for a single game command. If command with greater size is received - it
//  is ignored and sender kicked as cheater. Set 0 to disable.
//  256 - default value
//game_command_max_size 0 // Disabled

//  game_commands_per_step_max_size
//  Size limitation in bytes for total commands received from all clients in one step. This number is
//  divided by amount of clients in the session to determine the limit per client. If client sendS more
//  than that limit - he will be kicked as cheater. Set 0 to disable.
//  64000 - default value
//game_commands_per_step_max_size 0 // Disabled

//  game_timescale_enabled
//  Timescale enable flag. If enabled - clients are able to change game timescale in the session.
//  If client will try to change timescale while it is disabled he will be reported as cheater.
//  0 - default value (disabled)
//game_timescale_enabled 1 // Enabled

//  game_steps_delay_min
//  Steps delay minimum size. Defines a minimum number of steps to be delayed in client’s steps buffer.
//  For smooth gameplay shouldn’t be less than 1, through it is not an error.
//  1 - default value (1 step delay)
//game_steps_delay_min 2 // 2 steps delay

//  game_steps_delay_max
//  Steps delay maximum size. Defines a maximum number of steps to be delayed in client’s steps buffer.
//  This setting is used for dynamic steps delay change on lag detection. Should be more then 
//  game_steps_delay_min for the dynamic change to work. Set equal to game_steps_delay_min to disable 
//  dynamic change.
//  1 - default value (1 step buffer)
game_steps_delay_max 5 // 5 steps

//  game_steps_delay_frame
//  Steps delay revision frame in seconds. Used in a dynamic steps delay
//  change. After selected steps count (10 steps = 1 second) dynamically 
//  increased steps delay is decreased by one and new revision frame is
//  started, if needed.
//  0.0 - default value (no steps delay frame)
game_steps_delay_frame 10.0

//  game_reconnect_timeout (in seconds)
//  Defines maximum time to wait for announced reconnecting client to come in.
//  If client don't appear within the limit - he will not allowed to enter and
//  ConnectionTimedOut status will be sent to lobby server.
//  0.0 - default value (disabled)
game_reconnect_timeout 60.0

//  game_crc_data_requests_enabled
//  0 - default value (disabled)
//game_crc_data_requests_enabled 1

//  game_crc_data_requests_timeout (in seconds)
//  Defines maximum time to wait for CRC data, after CRC request from async
//  client is performed.
//  50.0 - default value
//game_crc_data_requests_timeout 0.0 // Disabled

//  game_roll_timeout (in seconds)
//  Awards roll timeout in seconds. Defines maximum time to wait for roll
//  service results. If roll service doesn't provide results within the limit
//  game server sends empty awards to clients.
//  0.0 - default value (disabled)
game_roll_timeout 30.0

//  game_roll_retry_timer (in seconds)
//  Awards roll retry timer in seconds. While game_roll_timeout will count a
//  global roll time out, this timer will be used for roll retries in shorter
//  time intervals.
//  0.0 - default value (disabled)
game_roll_retry_timer 10.0

//  game_fast_reconnect_reserve_time (in seconds)
//  Defines snapshot reservation depth for fast reconnect. Checked snapshots
//  are not cleared up to that depth. If client makes fast reconnect within 
//  specified time span - he will receive preserved commands. If client 
//  makes fast reconnect with older step - he is disconnected. Note: sometimes
//  reserved steps count may be larger if normal reconnect is in progress.
//  When set to 0 - effectively disables fast reconnect feature.
//  0.0 - default value (disabled)
game_fast_reconnect_reserve_time 50.0

//  game_send_async_to_all_clients_enabled
//  Send async to all clients enabling flag. If set to 1 - all clients in session will receive async
//  and disconnect. If set to 0 - only asynced client will receive async (if others are sync, of course)
//  0 - default value (disabled)
//game_send_async_to_all_clients_enabled 1 // Enabled

//  game_disconnect_ack_timeout (in seconds)
//  Defines client disconnect acknowledgement timeout in seconds. If
//  acknowledgement isn't received within specified steps count - client will
//  be dropped.
//  0.0 - default value (disabled)
game_disconnect_ack_timeout 2.0

//  game_initialize_statistics
//  Enables/disables statistics initialization. If initialization disabled - statistics can not be turned 
//  on on the fly.
//  This setting cannot be changed on the fly via config reload.
//  0 - default value (disabled)
game_initialize_statistics 1 // Enabled

//  game_enable_statistics
//  Enables/disables logging statistics by Game Server (but only if it was initialized).
//  0 - default value (disabled)
game_enable_statistics 1 // Enabled

//  game_spectators_limit
//  Sets spectators limit for one session. If set to 0 - spectator feature is disabled.
//  0 - default value (disabled)
//game_spectators_limit 1 // Enabled 1 spectator

//  game_log_lag_scheduler (in milliseconds)
//  Defines a maximum acceptable scheduler step lag in milliseconds.
//  If step time lag exceeds – it will be logged.
//  0 - default value (disabled)
//game_log_lag_scheduler 2 // Log if step > normal step + 2ms

//  game_log_lag_slicer (in milliseconds)
//  Defines a maximum acceptable time slicer instance step time in milliseconds.
//  If step time exceeds – it will be logged. Set zero to disable this checks.
//  0 - default value (disabled)
//game_log_lag_slicer 2 // Log if step > 2ms

//  game_polling_interval
//  Defines time interval in milliseconds between pollings. Minimum possible value is 1.
//  10 - default value (every 10ms)
//game_polling_interval 5 // every 5ms

//  game_polling_in_separate_thread
//  Enables/disables polling in separate thread.
//  0 - default value (disabled)
game_polling_in_separate_thread 1 // Enabled

//  game_multicast_steps_enabled
//  Enables/disables multicasting steps between gamesvc and relay.
//  0 - default value (disabled)
//game_multicast_steps_enabled 1 // Enabled

//////////////////////////////////////////////////////////////////////////////
// Client specific game settings, which aren't related to client-server interaction

//  game_minigame_enabled
//  Minigame enabling flag. If set to 0 - players will unable to enter minigame.
//  1 - default value (enabled)
//game_minigame_enabled 0 // Disabled

//  game_logic_param_1
//  Generic logic param 1. Used to deliver updatable on server parameter to clients.
//  0.0 - default value
//game_logic_param_1 1.0

//  game_show_hero_level
//  Enables/disables showing hero level on loading screen.
//  0 - default value (disabled)
game_show_hero_level 1 // Enabled

//  game_show_hero_rating
//  Enables/disables showing hero rating on loading screen.
//  0 - default value (disabled)
game_show_hero_rating 1 // Enabled

//  game_show_hero_force
//  Enables/disables showing hero force on loading screen.
//  0 - default value (disabled)
game_show_hero_force 1 // Enabled

//  game_show_delta_raiting
//  Enables/disables showing delta rating on loading screen.
//  0 - default value (disabled)
game_show_delta_raiting 1 // Enabled

//  game_show_locale
//  Enables display of team locale on loading screen
//  0 - default value (disabled)
game_show_locale 0

//  game_show_guild_emblem
//  Enables/disables showing guild emblem during session (on flags/in UI).
//  0 - default value (disabled)
//game_show_guild_emblem 1 // Enabled

//  game_share_url
//  Share screenshots URL
//  "" - default value
game_share_url "http://share.qa.playpw.com/share.php"

//  game_ai_for_leavers_enabled
//  Enable/disables AI for diconnected players' heroes in newbie games.
//  0  - default value (disabled)
game_ai_for_leavers_enabled 1 // Enabled

//  game_ai_for_leavers_threshold
//  Defines threshold timer before starting AI for diconnected players' heroes
//  in newbie games.
//  5.0 - default value (5 seconds)
//game_ai_for_leavers_threshold 15.0 // 15 seconds


//----------------------------------------------------------------------------
//	Настройки трекинга step'а для игровых сессий
//----------------------------------------------------------------------------
//  game_track_session_rpc_class
//  Идентификатор rpc класса (class crc), который надо мониторить
//  This setting cannot be changed on the fly via config reload.
//  3929183282 (0xea329432) (см. LIGameClient::GetClassCrc()) - значение по умолчанию
//  game_track_session_rpc_class 3929183282
//----------------------------------------------------------------------------
//  game_track_session_methond_idx
//  Индекс метода вызовы которого отслеживать
//  This setting cannot be changed on the fly via config reload.
//  1 (Step) - значение по умолчанию
//  game_track_session_methond_idx 1
//----------------------------------------------------------------------------
//  game_track_session_step_period_threshold
//  threshold для периодичности вызова IGameClient::Step для клиента в сессии
//  Если время между 2мя последовательноми вызовами IGameClient::Step превышает данный threshold
//  то в лог (отдельный файл для каждого relay соединеного с gamesvc) выводится сообщение
//  Пример имени лога: UniServer-private-0.0.00.0000-2012.05.21-12.09.14-gamesvc_1_relay_1.txt
//  This setting cannot be changed on the fly via config reload.
//  0 - отключить трекинг
//  102 - значение по умолчанию
//  game_track_session_step_period_threshold 0

//============================================================================
//  BDS Replays settings (test mode)
//----------------------------------------------------------------------------
//  game_bds_replays
//  включает/выключает запись реплеев через BDS (BlockData System)
//  It is not possible to enable bds replays on the fly via config reload if 
//  it was not enabled on server start.
//  0 - значение по умолчанию
//  game_bds_replays 1

//  game_bds_replays_folder
//  указывает относительный путь для сохранения файлов с реплеями
//  This setting cannot be changed on the fly via config reload.
//  game_bds_replays_folder replays



exec pvx_srv_custom_gamesvc.cfg global
