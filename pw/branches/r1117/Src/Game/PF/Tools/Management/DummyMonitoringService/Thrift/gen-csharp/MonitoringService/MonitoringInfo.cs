/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace MonitoringService
{

  [Serializable]
  public partial class MonitoringInfo : TBase
  {
    private int _game_ccu;
    private int _bld_ccu;
    private int _dwd_ccu;
    private int _ner_ccu;
    private int _ops_ccu;
    private int _trn_ccu;
    private int _tut_ccu;
    private int _oth_ccu;
    private int _socialccu;
    private int _mmakingusers;
    private int _begin_delivery_awards_count;
    private int _begin_delivery_guild_awards_count;
    private int _awards_delivered_count;
    private int _awards_failed_count;
    private int _awards_line_size;
    private int _awards_in_line_time;

    public int Game_ccu
    {
      get
      {
        return _game_ccu;
      }
      set
      {
        __isset.game_ccu = true;
        this._game_ccu = value;
      }
    }

    public int Bld_ccu
    {
      get
      {
        return _bld_ccu;
      }
      set
      {
        __isset.bld_ccu = true;
        this._bld_ccu = value;
      }
    }

    public int Dwd_ccu
    {
      get
      {
        return _dwd_ccu;
      }
      set
      {
        __isset.dwd_ccu = true;
        this._dwd_ccu = value;
      }
    }

    public int Ner_ccu
    {
      get
      {
        return _ner_ccu;
      }
      set
      {
        __isset.ner_ccu = true;
        this._ner_ccu = value;
      }
    }

    public int Ops_ccu
    {
      get
      {
        return _ops_ccu;
      }
      set
      {
        __isset.ops_ccu = true;
        this._ops_ccu = value;
      }
    }

    public int Trn_ccu
    {
      get
      {
        return _trn_ccu;
      }
      set
      {
        __isset.trn_ccu = true;
        this._trn_ccu = value;
      }
    }

    public int Tut_ccu
    {
      get
      {
        return _tut_ccu;
      }
      set
      {
        __isset.tut_ccu = true;
        this._tut_ccu = value;
      }
    }

    public int Oth_ccu
    {
      get
      {
        return _oth_ccu;
      }
      set
      {
        __isset.oth_ccu = true;
        this._oth_ccu = value;
      }
    }

    public int Socialccu
    {
      get
      {
        return _socialccu;
      }
      set
      {
        __isset.socialccu = true;
        this._socialccu = value;
      }
    }

    public int Mmakingusers
    {
      get
      {
        return _mmakingusers;
      }
      set
      {
        __isset.mmakingusers = true;
        this._mmakingusers = value;
      }
    }

    public int Begin_delivery_awards_count
    {
      get
      {
        return _begin_delivery_awards_count;
      }
      set
      {
        __isset.begin_delivery_awards_count = true;
        this._begin_delivery_awards_count = value;
      }
    }

    public int Begin_delivery_guild_awards_count
    {
      get
      {
        return _begin_delivery_guild_awards_count;
      }
      set
      {
        __isset.begin_delivery_guild_awards_count = true;
        this._begin_delivery_guild_awards_count = value;
      }
    }

    public int Awards_delivered_count
    {
      get
      {
        return _awards_delivered_count;
      }
      set
      {
        __isset.awards_delivered_count = true;
        this._awards_delivered_count = value;
      }
    }

    public int Awards_failed_count
    {
      get
      {
        return _awards_failed_count;
      }
      set
      {
        __isset.awards_failed_count = true;
        this._awards_failed_count = value;
      }
    }

    public int Awards_line_size
    {
      get
      {
        return _awards_line_size;
      }
      set
      {
        __isset.awards_line_size = true;
        this._awards_line_size = value;
      }
    }

    public int Awards_in_line_time
    {
      get
      {
        return _awards_in_line_time;
      }
      set
      {
        __isset.awards_in_line_time = true;
        this._awards_in_line_time = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool game_ccu;
      public bool bld_ccu;
      public bool dwd_ccu;
      public bool ner_ccu;
      public bool ops_ccu;
      public bool trn_ccu;
      public bool tut_ccu;
      public bool oth_ccu;
      public bool socialccu;
      public bool mmakingusers;
      public bool begin_delivery_awards_count;
      public bool begin_delivery_guild_awards_count;
      public bool awards_delivered_count;
      public bool awards_failed_count;
      public bool awards_line_size;
      public bool awards_in_line_time;
    }

    public MonitoringInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Game_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Bld_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Dwd_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Ner_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Ops_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Trn_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Tut_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Oth_ccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Socialccu = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Mmakingusers = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              Begin_delivery_awards_count = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              Begin_delivery_guild_awards_count = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.I32) {
              Awards_delivered_count = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.I32) {
              Awards_failed_count = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I32) {
              Awards_line_size = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.I32) {
              Awards_in_line_time = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("MonitoringInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.game_ccu) {
        field.Name = "game_ccu";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Game_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.bld_ccu) {
        field.Name = "bld_ccu";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Bld_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.dwd_ccu) {
        field.Name = "dwd_ccu";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Dwd_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.ner_ccu) {
        field.Name = "ner_ccu";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Ner_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.ops_ccu) {
        field.Name = "ops_ccu";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Ops_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.trn_ccu) {
        field.Name = "trn_ccu";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Trn_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.tut_ccu) {
        field.Name = "tut_ccu";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Tut_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.oth_ccu) {
        field.Name = "oth_ccu";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Oth_ccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.socialccu) {
        field.Name = "socialccu";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Socialccu);
        oprot.WriteFieldEnd();
      }
      if (__isset.mmakingusers) {
        field.Name = "mmakingusers";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Mmakingusers);
        oprot.WriteFieldEnd();
      }
      if (__isset.begin_delivery_awards_count) {
        field.Name = "begin_delivery_awards_count";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Begin_delivery_awards_count);
        oprot.WriteFieldEnd();
      }
      if (__isset.begin_delivery_guild_awards_count) {
        field.Name = "begin_delivery_guild_awards_count";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Begin_delivery_guild_awards_count);
        oprot.WriteFieldEnd();
      }
      if (__isset.awards_delivered_count) {
        field.Name = "awards_delivered_count";
        field.Type = TType.I32;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Awards_delivered_count);
        oprot.WriteFieldEnd();
      }
      if (__isset.awards_failed_count) {
        field.Name = "awards_failed_count";
        field.Type = TType.I32;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Awards_failed_count);
        oprot.WriteFieldEnd();
      }
      if (__isset.awards_line_size) {
        field.Name = "awards_line_size";
        field.Type = TType.I32;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Awards_line_size);
        oprot.WriteFieldEnd();
      }
      if (__isset.awards_in_line_time) {
        field.Name = "awards_in_line_time";
        field.Type = TType.I32;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Awards_in_line_time);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("MonitoringInfo(");
      sb.Append("Game_ccu: ");
      sb.Append(Game_ccu);
      sb.Append(",Bld_ccu: ");
      sb.Append(Bld_ccu);
      sb.Append(",Dwd_ccu: ");
      sb.Append(Dwd_ccu);
      sb.Append(",Ner_ccu: ");
      sb.Append(Ner_ccu);
      sb.Append(",Ops_ccu: ");
      sb.Append(Ops_ccu);
      sb.Append(",Trn_ccu: ");
      sb.Append(Trn_ccu);
      sb.Append(",Tut_ccu: ");
      sb.Append(Tut_ccu);
      sb.Append(",Oth_ccu: ");
      sb.Append(Oth_ccu);
      sb.Append(",Socialccu: ");
      sb.Append(Socialccu);
      sb.Append(",Mmakingusers: ");
      sb.Append(Mmakingusers);
      sb.Append(",Begin_delivery_awards_count: ");
      sb.Append(Begin_delivery_awards_count);
      sb.Append(",Begin_delivery_guild_awards_count: ");
      sb.Append(Begin_delivery_guild_awards_count);
      sb.Append(",Awards_delivered_count: ");
      sb.Append(Awards_delivered_count);
      sb.Append(",Awards_failed_count: ");
      sb.Append(Awards_failed_count);
      sb.Append(",Awards_line_size: ");
      sb.Append(Awards_line_size);
      sb.Append(",Awards_in_line_time: ");
      sb.Append(Awards_in_line_time);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
