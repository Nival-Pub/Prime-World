/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace AccountLib
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class GuildMemberInfo : TBase
  {
    private long _auid;
    private string _nickname;
    private bool _isofficer;
    private int _addedTalentsDailyCount;
    private int _takenTalentsDailyCount;

    public long Auid
    {
      get
      {
        return _auid;
      }
      set
      {
        __isset.auid = true;
        this._auid = value;
      }
    }

    public string Nickname
    {
      get
      {
        return _nickname;
      }
      set
      {
        __isset.nickname = true;
        this._nickname = value;
      }
    }

    public bool Isofficer
    {
      get
      {
        return _isofficer;
      }
      set
      {
        __isset.isofficer = true;
        this._isofficer = value;
      }
    }

    public int AddedTalentsDailyCount
    {
      get
      {
        return _addedTalentsDailyCount;
      }
      set
      {
        __isset.addedTalentsDailyCount = true;
        this._addedTalentsDailyCount = value;
      }
    }

    public int TakenTalentsDailyCount
    {
      get
      {
        return _takenTalentsDailyCount;
      }
      set
      {
        __isset.takenTalentsDailyCount = true;
        this._takenTalentsDailyCount = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool auid;
      public bool nickname;
      public bool isofficer;
      public bool addedTalentsDailyCount;
      public bool takenTalentsDailyCount;
    }

    public GuildMemberInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              Auid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Nickname = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Bool) {
              Isofficer = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              AddedTalentsDailyCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              TakenTalentsDailyCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GuildMemberInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.auid) {
        field.Name = "auid";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Auid);
        oprot.WriteFieldEnd();
      }
      if (Nickname != null && __isset.nickname) {
        field.Name = "nickname";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Nickname);
        oprot.WriteFieldEnd();
      }
      if (__isset.isofficer) {
        field.Name = "isofficer";
        field.Type = TType.Bool;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Isofficer);
        oprot.WriteFieldEnd();
      }
      if (__isset.addedTalentsDailyCount) {
        field.Name = "addedTalentsDailyCount";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AddedTalentsDailyCount);
        oprot.WriteFieldEnd();
      }
      if (__isset.takenTalentsDailyCount) {
        field.Name = "takenTalentsDailyCount";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TakenTalentsDailyCount);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GuildMemberInfo(");
      sb.Append("Auid: ");
      sb.Append(Auid);
      sb.Append(",Nickname: ");
      sb.Append(Nickname);
      sb.Append(",Isofficer: ");
      sb.Append(Isofficer);
      sb.Append(",AddedTalentsDailyCount: ");
      sb.Append(AddedTalentsDailyCount);
      sb.Append(",TakenTalentsDailyCount: ");
      sb.Append(TakenTalentsDailyCount);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
