/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace AccountLib
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class AdminMessage : TBase
  {
    private string _messageTitle;
    private string _messageText;
    private string _gmLogin;
    private long _timestamp;

    public string MessageTitle
    {
      get
      {
        return _messageTitle;
      }
      set
      {
        __isset.messageTitle = true;
        this._messageTitle = value;
      }
    }

    public string MessageText
    {
      get
      {
        return _messageText;
      }
      set
      {
        __isset.messageText = true;
        this._messageText = value;
      }
    }

    public string GmLogin
    {
      get
      {
        return _gmLogin;
      }
      set
      {
        __isset.gmLogin = true;
        this._gmLogin = value;
      }
    }

    public long Timestamp
    {
      get
      {
        return _timestamp;
      }
      set
      {
        __isset.timestamp = true;
        this._timestamp = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool messageTitle;
      public bool messageText;
      public bool gmLogin;
      public bool timestamp;
    }

    public AdminMessage() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              MessageTitle = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              MessageText = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              GmLogin = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              Timestamp = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("AdminMessage");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (MessageTitle != null && __isset.messageTitle) {
        field.Name = "messageTitle";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MessageTitle);
        oprot.WriteFieldEnd();
      }
      if (MessageText != null && __isset.messageText) {
        field.Name = "messageText";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MessageText);
        oprot.WriteFieldEnd();
      }
      if (GmLogin != null && __isset.gmLogin) {
        field.Name = "gmLogin";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(GmLogin);
        oprot.WriteFieldEnd();
      }
      if (__isset.timestamp) {
        field.Name = "timestamp";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Timestamp);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("AdminMessage(");
      sb.Append("MessageTitle: ");
      sb.Append(MessageTitle);
      sb.Append(",MessageText: ");
      sb.Append(MessageText);
      sb.Append(",GmLogin: ");
      sb.Append(GmLogin);
      sb.Append(",Timestamp: ");
      sb.Append(Timestamp);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
