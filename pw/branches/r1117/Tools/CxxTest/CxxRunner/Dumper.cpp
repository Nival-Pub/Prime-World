#include "Dumper.h"
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
static const DWORD GetLevelMask( const ELevel eLevel )
{
	return 1 << (DWORD)eLevel;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace NLogg
{
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CDumper::CDumper( CLogger *pDefaultLogger, const char *_szName ) : dwLevelFilter( 0xFFFFFFFF ), szName( _szName )
{
	if ( pDefaultLogger != 0 )
		pDefaultLogger->AddDumper( this );
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CDumper::AddLevel( const ELevel eLevel )
{
	if ( dwLevelFilter == 0xFFFFFFFF )
		dwLevelFilter = 0;
	dwLevelFilter |= GetLevelMask( eLevel );
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CDumper::RemoveLevel( const ELevel eLevel )
{
	dwLevelFilter &= ( 0xFFFFFFFF - GetLevelMask( eLevel ) );
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CDumper::Dump( const CLogger *pLogger, const char *szFileName, const DWORD dwLine, const TTime time, const ELevel eLevel, const char *szMessage )
{
	if ( ( dwLevelFilter & GetLevelMask( eLevel ) ) != 0 )
	{
		CLockerGuard locGuard( locker );
		OnDump( pLogger, szFileName, dwLine, time, eLevel, szMessage );
	}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
