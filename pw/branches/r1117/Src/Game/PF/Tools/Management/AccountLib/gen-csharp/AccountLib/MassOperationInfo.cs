/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace AccountLib
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class MassOperationInfo : TBase
  {
    private MassOperationType _type;
    private List<long> _auids;
    private string _flagId;
    private int _talentId;
    private List<int> _talentIds;
    private int _days;
    private string _message;
    private LampInfo _lampInfo;
    private string _skinId;
    private int _heroId;
    private int _buildingId;
    private AccountEdit _accountEdit;

    /// <summary>
    /// 
    /// <seealso cref="MassOperationType"/>
    /// </summary>
    public MassOperationType Type
    {
      get
      {
        return _type;
      }
      set
      {
        __isset.type = true;
        this._type = value;
      }
    }

    public List<long> Auids
    {
      get
      {
        return _auids;
      }
      set
      {
        __isset.auids = true;
        this._auids = value;
      }
    }

    public string FlagId
    {
      get
      {
        return _flagId;
      }
      set
      {
        __isset.flagId = true;
        this._flagId = value;
      }
    }

    public int TalentId
    {
      get
      {
        return _talentId;
      }
      set
      {
        __isset.talentId = true;
        this._talentId = value;
      }
    }

    public List<int> TalentIds
    {
      get
      {
        return _talentIds;
      }
      set
      {
        __isset.talentIds = true;
        this._talentIds = value;
      }
    }

    public int Days
    {
      get
      {
        return _days;
      }
      set
      {
        __isset.days = true;
        this._days = value;
      }
    }

    public string Message
    {
      get
      {
        return _message;
      }
      set
      {
        __isset.message = true;
        this._message = value;
      }
    }

    public LampInfo LampInfo
    {
      get
      {
        return _lampInfo;
      }
      set
      {
        __isset.lampInfo = true;
        this._lampInfo = value;
      }
    }

    public string SkinId
    {
      get
      {
        return _skinId;
      }
      set
      {
        __isset.skinId = true;
        this._skinId = value;
      }
    }

    public int HeroId
    {
      get
      {
        return _heroId;
      }
      set
      {
        __isset.heroId = true;
        this._heroId = value;
      }
    }

    public int BuildingId
    {
      get
      {
        return _buildingId;
      }
      set
      {
        __isset.buildingId = true;
        this._buildingId = value;
      }
    }

    public AccountEdit AccountEdit
    {
      get
      {
        return _accountEdit;
      }
      set
      {
        __isset.accountEdit = true;
        this._accountEdit = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool type;
      public bool auids;
      public bool flagId;
      public bool talentId;
      public bool talentIds;
      public bool days;
      public bool message;
      public bool lampInfo;
      public bool skinId;
      public bool heroId;
      public bool buildingId;
      public bool accountEdit;
    }

    public MassOperationInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Type = (MassOperationType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                Auids = new List<long>();
                TList _list362 = iprot.ReadListBegin();
                for( int _i363 = 0; _i363 < _list362.Count; ++_i363)
                {
                  long _elem364 = 0;
                  _elem364 = iprot.ReadI64();
                  Auids.Add(_elem364);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              FlagId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              TalentId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                TalentIds = new List<int>();
                TList _list365 = iprot.ReadListBegin();
                for( int _i366 = 0; _i366 < _list365.Count; ++_i366)
                {
                  int _elem367 = 0;
                  _elem367 = iprot.ReadI32();
                  TalentIds.Add(_elem367);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Days = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              Message = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Struct) {
              LampInfo = new LampInfo();
              LampInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              SkinId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              HeroId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              BuildingId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.Struct) {
              AccountEdit = new AccountEdit();
              AccountEdit.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("MassOperationInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.type) {
        field.Name = "type";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Type);
        oprot.WriteFieldEnd();
      }
      if (Auids != null && __isset.auids) {
        field.Name = "auids";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, Auids.Count));
          foreach (long _iter368 in Auids)
          {
            oprot.WriteI64(_iter368);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (FlagId != null && __isset.flagId) {
        field.Name = "flagId";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(FlagId);
        oprot.WriteFieldEnd();
      }
      if (__isset.talentId) {
        field.Name = "talentId";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TalentId);
        oprot.WriteFieldEnd();
      }
      if (TalentIds != null && __isset.talentIds) {
        field.Name = "talentIds";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I32, TalentIds.Count));
          foreach (int _iter369 in TalentIds)
          {
            oprot.WriteI32(_iter369);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.days) {
        field.Name = "days";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Days);
        oprot.WriteFieldEnd();
      }
      if (Message != null && __isset.message) {
        field.Name = "message";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Message);
        oprot.WriteFieldEnd();
      }
      if (LampInfo != null && __isset.lampInfo) {
        field.Name = "lampInfo";
        field.Type = TType.Struct;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        LampInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (SkinId != null && __isset.skinId) {
        field.Name = "skinId";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SkinId);
        oprot.WriteFieldEnd();
      }
      if (__isset.heroId) {
        field.Name = "heroId";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(HeroId);
        oprot.WriteFieldEnd();
      }
      if (__isset.buildingId) {
        field.Name = "buildingId";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BuildingId);
        oprot.WriteFieldEnd();
      }
      if (AccountEdit != null && __isset.accountEdit) {
        field.Name = "accountEdit";
        field.Type = TType.Struct;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        AccountEdit.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("MassOperationInfo(");
      sb.Append("Type: ");
      sb.Append(Type);
      sb.Append(",Auids: ");
      sb.Append(Auids);
      sb.Append(",FlagId: ");
      sb.Append(FlagId);
      sb.Append(",TalentId: ");
      sb.Append(TalentId);
      sb.Append(",TalentIds: ");
      sb.Append(TalentIds);
      sb.Append(",Days: ");
      sb.Append(Days);
      sb.Append(",Message: ");
      sb.Append(Message);
      sb.Append(",LampInfo: ");
      sb.Append(LampInfo== null ? "<null>" : LampInfo.ToString());
      sb.Append(",SkinId: ");
      sb.Append(SkinId);
      sb.Append(",HeroId: ");
      sb.Append(HeroId);
      sb.Append(",BuildingId: ");
      sb.Append(BuildingId);
      sb.Append(",AccountEdit: ");
      sb.Append(AccountEdit== null ? "<null>" : AccountEdit.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
