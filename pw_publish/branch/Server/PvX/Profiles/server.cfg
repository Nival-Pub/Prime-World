//============================================================================
//  Coordinator settings
//----------------------------------------------------------------------------
//  coordinator_address: 
//  ip-адреc по которому сервисы подсоединяются к coordinator'у
setvar coordinator_address = localhost:35000

//----------------------------------------------------------------------------
//  frontend_ip_addr
//  ip адрес на котором сервисы открывают свои front-end интерфейсы(для клиентов кластера)
//  localhost - значение по умолчанию
//  frontend_ip_addr localhost

//----------------------------------------------------------------------------
//  backend_ip_addr
//  ip адрес на котором сервисы открывают свои back-end интерфейсы(для других сервисов)
//  localhost - значение по умолчанию 
//  backend_ip_addr localhost



// rdp_enable 0
// Включает UDP транспорт
// по умолчанию выключено
// rdp_enable 0


// rdp_backend_log_events 3073
// rdp_frontend_log_events 3073
//
// Флаги логирования событий RDP:
// значение по-умолчанию - 3073
// MajorEvents        = 1
// Handshake          = 2
// Shutdown           = 4
// Packets            = 8
// Details            = 16
// Cc                 = 32
// Warnings           = 1024
// Errors             = 2048


// rdp_sock_server_priority 1
// Приоритет треда UDP сокет-сервера
// Значение по-умолчанию 1 (ABOVE_NORMAL)


// rdp_logic_priority 1
// Приоритет треда логики RDP
// Значение по-умолчанию 1 (ABOVE_NORMAL)


// rdp_sock_buffer_size 65536
// Размер буффера UDP сокета (SO_SNDBUF и SO_RCVBUF)


// rdp_dump_packets 0
// Включает отладочное логирование всех пакетов в RDP-транспорте


// rdp_backend_handshake_timeout 10
// Таймаут на ожидание handshake от удаленной стороны


//============================================================================
//  Uniserver instance settings
//----------------------------------------------------------------------------
//  uniserver_svcpath:
//  путь, по которому будут зарегистрированы все сервисы запущенные в данном инстансе uniserver'а
//  Например, если svcpath=ru или svcpath=moscow/nivaloffice, то первый запущенный gamesvc
//  будет иметь полный идентификатор следующего вида:
//  ru/gamesvc/1 или moscow/nivaloffice/gamesvc/1, соответственно
//
//  этот же параметр можно задать в uniserver'е через командную строку:
//  UniserverApp --svcpath ru
//
//  по умолчанию:
//  uniserver_svcpath ru


// log_rotation_period
// Период ротации логов в часах, или 0 (отключить ротацию)
// по умолчанию 0
log_rotation_period 24


//  cluster name 
//  чисто для информации; имя кластера показывается в заголовке окна консоли, в списке процессов и т.п. 
setvar cluster_name = Local


//  service options
//  для унификации вида командной строки UniServer: командная строка может содержать только имена сервисов и вспомогательные опции вида "--option value"
//  все опции сервисов ("zzima", "billing" и т.п.) теперь задаются в конфиге, желательно с указанием конкретного имени сервиса:
//  add_service_option <option> <service>
//  add_service_option <option> // этот вариант раздает опцию всем создаваемым сервисам

//----------------------------------------------------------------------------
//  ! для оверрайда default опций в private.cfg можно использовать команду
//  remove_service_option <option>


//============================================================================
//  Transport layer settings
//----------------------------------------------------------------------------
//  use_old_transport_4_managed_rpc: 
//  использовать старую реализацию(не aio) transport'а
//  значение по умолчанию 1
use_old_transport_4_managed_rpc 0

//----------------------------------------------------------------------------
//  tl_threads
//  размер пула потоков используемых одним транспортным модулем
//  0 - кол-во потоков по кол-ву процессоров/ядер (значение по умолчанию)
//  tl_threads 4

//----------------------------------------------------------------------------
//  tl_read_block_size
//  размер буфера в байтах на чтение в каждом соединении(SO_RCVBUF)
//  0 - используется дефолтное значение в системе
//  512Kb значение по умолчанию в серверах
//  tl_read_block_size 0

//----------------------------------------------------------------------------
//  tl_disable_nagle_algorithm
//  отключить алгоримт Нейгла
//  -1 - значение в системе, 0 - использовать алгоритм, 1 - отключить
//  1 - значение по умолчанию
//  tl_disable_nagle_algorithm -1

//----------------------------------------------------------------------------
//  tl_log_level
//  уровень логирования транспортного уровеня
//  3 - только ошибки, 2 - 3+диагностика, 1 - 2+дебаг информация, 0 - 1+трейсинг вызовов
//  2 - значение по умолчанию
//  tl_log_level 1

//----------------------------------------------------------------------------
//  tl_terabit_log_level
//  уровень логирования транспортного уровеня
//  2 - только ошибки, 1 - 2+инфо, 0 - 1+дебаг
//  2 - значение по умолчанию
//  tl_terabit_log_level 1

//----------------------------------------------------------------------------
//  tl_check_activity_timeout
//  частота проверки активности каналов в секундах (сейчас посылаем пинг по каналам)
//  0 - отключить периодическую проверку
//  30 секунд - значение по умолчанию
//  tl_check_activity_timeout 0

//----------------------------------------------------------------------------
//  Настройки транспортного message block allocator'а 
//----------------------------------------------------------------------------
//  tl_message_block_heap_dump_freq
//  Частота дампа в лог состояния allocator'а (через сколько аллокаций)
//  100000 - значение по умолчанию
//  tl_message_block_heap_dump_freq 100000
//----------------------------------------------------------------------------
//  tl_message_block_heap_per_connection
//  Отдельный аллокатор на каждое соединение или общий на все
//  0(общий на все) - значение по умолчанию
//  tl_message_block_heap_per_connection 1
//----------------------------------------------------------------------------
//  tl_message_block_notype_use_threshold
//  tl_message_block_write_use_threshold
//  tl_message_block_read_use_threshold
//  threshold на нахождение блока вне хипа аллокатора в ms для разных типов блоков (notype, на запись, на чтение)
//  Значения по умолчанию:
//  tl_message_block_notype_use_threshold 50
//  tl_message_block_write_use_threshold 50
//  tl_message_block_read_use_threshold 100


//============================================================================
//  Настройки Remote Objects
//
//----------------------------------------------------------------------------
//  rpc_log_level: 
//  выводим диагностику по remote вызовам (0 = не выводить 1 = выводить 2 = выводить расширенную информацию)
//  значение по умолчанию 0 
rpc_log_level 0
rdp_dump_packets 0


//-------------------------
// Statistics Client
//-------------------------

// stat_client_url
// URL, на который будут отправляться данные статистики
// stat_client_url "http://localhost:8080/data/"


// stat_retry_timeout_limit
// Максимальная пауза между повторными попытками отправить данные в статистику, сек
// По умолчанию HTTP хапросы идут с паузой в 1 сек. В случае проблем со связью
// пауза удваивается до достижения лимита
// stat_retry_timeout_limit 240.0


// stat_chunk_limit
// Максимальный размер блока данных статистики, байт
// stat_chunk_limit 262144


// stat_chunk_msg_limit
// Максимальное количество сообщений в одном блоке данных, штук
// stat_chunk_msg_limit 16384


// stat_chunk_timeout
// Максимальное время буферизации данных статистики, сек
// Нельзя ставить меньше 2 сек!
// По умолчанию 600 сек
stat_chunk_timeout 5


//-------------------------
// Log Monitor Agent
//-------------------------

// Включатель мониторинга логов
// по умолчанию мониторинг выключен
// log_monitor_on 0

// URL куда слать сообщения из логов
// по умолчанию http://localhost:8080
// log_monitor_dest_url http://localhost:8080

// Лимит на количество сообщений в очереди отправки
// по умолчанию 1024
// log_monitor_queue_limit 1024

// Лимит на количество сообщений в одном HTTP-запросе
// по умолчанию 256
// log_monitor_pack_size 256

// Начальный период отправки сообщений, сек
// В случае ошибки при отправке период удваивается
// по-умолчанию 0.5
// log_monitor_default_period 0.5

// Максимальный период отправки сообщений, сек
// по-умолчанию 60.0
// log_monitor_max_period 60.0




//----------------------------------------------------------------------------
// Utility
//----------------------------------------------------------------------------

// оверрайдим все вышеприведенные "дефолтные настройки" настройками специфичного кластера:
exec cluster.cfg

// оверрайдим все вышеприведенные "дефолтные настройки" локальными настройками пользователя:
exec srv_private.cfg global
