  #pragma once

  /////////////////////////////////////////////////////////////////////////////////
  // Includes
  /////////////////////////////////////////////////////////////////////////////////

#include "../System/Geom.h"

  #include "../PF_Core/WorldObject.h"
  #include "PFWorldObjectBase.h"
  #include "PFWorld.h"
  #include "PFAIWorld.h"
  #include "../System/ScopedArray.h"
  #include "../System/ScopedPtr.h"


  // Maximum possible unit visibility radius

  namespace NGameX { class PFClientTree; }

  namespace NWorld
  {

    /////////////////////////////////////////////////////////////////////////////////
    // Classes
    /////////////////////////////////////////////////////////////////////////////////



    // PURP: World Tree. Can be removed
    // NOTE:
    class PFWorldTree : public PFWorldObjectBase
    {
      WORLD_OBJECT_METHODS(0x16616C40, PFWorldTree, NGameX::PFClientTree)
    public:
      /////////////////////////////////////////////////////////////////////////////////
      // Public Methods
      /////////////////////////////////////////////////////////////////////////////////
      PFWorldTree(PFWorld *pWorld, const NDb::AdvMapObject &dbObject);
      
      void    DropTree(const CVec3 &dir);
      void    RestoreTree();
      
    private:
      /////////////////////////////////////////////////////////////////////////////////
      // Private Methods
      /////////////////////////////////////////////////////////////////////////////////
      PFWorldTree() { }


      /////////////////////////////////////////////////////////////////////////////////
      // Private Data
      /////////////////////////////////////////////////////////////////////////////////
    };

  } // namespace NWorld

