/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace StatisticCore.Thrift
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class JoinSessionInfo : TBase
  {
    private long _auid;
    private long _sessionpersistentid;
    private int _heroid;
    private List<int> _talentset;
    private List<int> _guildbuffs;
    private int _guildwareventpass;
    private int _timestamp;

    public long Auid
    {
      get
      {
        return _auid;
      }
      set
      {
        __isset.auid = true;
        this._auid = value;
      }
    }

    public long Sessionpersistentid
    {
      get
      {
        return _sessionpersistentid;
      }
      set
      {
        __isset.sessionpersistentid = true;
        this._sessionpersistentid = value;
      }
    }

    public int Heroid
    {
      get
      {
        return _heroid;
      }
      set
      {
        __isset.heroid = true;
        this._heroid = value;
      }
    }

    public List<int> Talentset
    {
      get
      {
        return _talentset;
      }
      set
      {
        __isset.talentset = true;
        this._talentset = value;
      }
    }

    public List<int> Guildbuffs
    {
      get
      {
        return _guildbuffs;
      }
      set
      {
        __isset.guildbuffs = true;
        this._guildbuffs = value;
      }
    }

    public int Guildwareventpass
    {
      get
      {
        return _guildwareventpass;
      }
      set
      {
        __isset.guildwareventpass = true;
        this._guildwareventpass = value;
      }
    }

    public int Timestamp
    {
      get
      {
        return _timestamp;
      }
      set
      {
        __isset.timestamp = true;
        this._timestamp = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool auid;
      public bool sessionpersistentid;
      public bool heroid;
      public bool talentset;
      public bool guildbuffs;
      public bool guildwareventpass;
      public bool timestamp;
    }

    public JoinSessionInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              Auid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I64) {
              Sessionpersistentid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Heroid = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.List) {
              {
                Talentset = new List<int>();
                TList _list5 = iprot.ReadListBegin();
                for( int _i6 = 0; _i6 < _list5.Count; ++_i6)
                {
                  int _elem7 = 0;
                  _elem7 = iprot.ReadI32();
                  Talentset.Add(_elem7);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                Guildbuffs = new List<int>();
                TList _list8 = iprot.ReadListBegin();
                for( int _i9 = 0; _i9 < _list8.Count; ++_i9)
                {
                  int _elem10 = 0;
                  _elem10 = iprot.ReadI32();
                  Guildbuffs.Add(_elem10);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Guildwareventpass = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Timestamp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("JoinSessionInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.auid) {
        field.Name = "auid";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Auid);
        oprot.WriteFieldEnd();
      }
      if (__isset.sessionpersistentid) {
        field.Name = "sessionpersistentid";
        field.Type = TType.I64;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Sessionpersistentid);
        oprot.WriteFieldEnd();
      }
      if (__isset.heroid) {
        field.Name = "heroid";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Heroid);
        oprot.WriteFieldEnd();
      }
      if (Talentset != null && __isset.talentset) {
        field.Name = "talentset";
        field.Type = TType.List;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I32, Talentset.Count));
          foreach (int _iter11 in Talentset)
          {
            oprot.WriteI32(_iter11);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (Guildbuffs != null && __isset.guildbuffs) {
        field.Name = "guildbuffs";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I32, Guildbuffs.Count));
          foreach (int _iter12 in Guildbuffs)
          {
            oprot.WriteI32(_iter12);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.guildwareventpass) {
        field.Name = "guildwareventpass";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Guildwareventpass);
        oprot.WriteFieldEnd();
      }
      if (__isset.timestamp) {
        field.Name = "timestamp";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Timestamp);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("JoinSessionInfo(");
      sb.Append("Auid: ");
      sb.Append(Auid);
      sb.Append(",Sessionpersistentid: ");
      sb.Append(Sessionpersistentid);
      sb.Append(",Heroid: ");
      sb.Append(Heroid);
      sb.Append(",Talentset: ");
      sb.Append(Talentset);
      sb.Append(",Guildbuffs: ");
      sb.Append(Guildbuffs);
      sb.Append(",Guildwareventpass: ");
      sb.Append(Guildwareventpass);
      sb.Append(",Timestamp: ");
      sb.Append(Timestamp);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
